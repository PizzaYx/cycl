{"version":3,"file":"syAllMap.js","sources":["pages/collection/syAllMap.vue","pages/collection/syAllMap.vue?type=page"],"sourcesContent":["<template>\n    <view class=\"container\">\n        <PageHeader title=\"收运地图详情\" @back=\"back\" />\n\n        <view class=\"map-container\">\n            <map id=\"navigationMap\" class=\"navigation-map\" :scale=\"mapScale\" :markers=\"mapMarkers\"\n                :polyline=\"mapPolyline\" :show-location=\"true\" :enable-zoom=\"true\" :enable-scroll=\"true\"\n                :latitude=\"mapCenter.latitude\" :longitude=\"mapCenter.longitude\"></map>\n\n            <!-- 定位状态提示 -->\n            <view class=\"location-status\" v-if=\"isLocating && isFirstLocation\">\n                <uni-icons type=\"spinner-cycle\" size=\"20\" color=\"#07C160\"></uni-icons>\n                <text class=\"status-text\">正在定位和规划路线...</text>\n            </view>\n\n        </view>\n\n        <view class=\"bottom-section\">\n            <view class=\"driver-info-card\">\n                <view class=\"info-item\">\n                    <view class=\"avatar\">\n                        <view class=\"avatar-text\">{{ userStore.userSFAvatar }}</view>\n                    </view>\n                    <view class=\"name-info\">\n                        <text class=\"label\">司机姓名：</text>\n                        <text class=\"value\">{{ driverName }}</text>\n                    </view>\n                </view>\n\n                <view class=\"divider\"></view>\n\n                <view class=\"driver-details\">\n                    <view class=\"detail-item\">\n                        <text class=\"label\">车牌号：</text>\n                        <text class=\"value\">{{ registrationNumber }}</text>\n                    </view>\n                    <view class=\"detail-item\">\n                        <text class=\"label\">收运总重量：</text>\n                        <text class=\"value\">{{ totalEstimateWeight }}kg</text>\n                    </view>\n                    <view class=\"detail-item\">\n                        <text class=\"label\">垃圾桶数：</text>\n                        <text class=\"value\">{{ totalBucketNum }}个</text>\n                    </view>\n                    <view class=\"detail-item\">\n                        <text class=\"label\">收运日期：</text>\n                        <text class=\"value\">{{ currentDate }}</text>\n                    </view>\n                </view>\n            </view>\n\n        </view>\n    </view>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted, nextTick } from 'vue'\nimport { useUserStore } from '@/stores/user.js'\nimport { onLoad } from '@dcloudio/uni-app'; // 正确导入onLoad生命周期\nimport { TIANDITU_CONFIG } from '@/utils/config.js' // 导入天地图配置\nimport gcoord from 'gcoord' // 导入坐标转换库\nimport PageHeader from '@/components/PageHeader/PageHeader.vue'\nconst userStore = useUserStore()\n\n// 地图相关数据\nconst mapScale = ref(14) // 提高缩放级别，更清楚显示当前位置\nconst mapMarkers = ref([])\nconst mapPolyline = ref([])\nconst mapCenter = ref({\n    latitude: 30.6586, // 成都市中心坐标\n    longitude: 104.0647\n})\n\n// 接收的参数数据\nconst taskList = ref([])\nconst driverName = ref('')\nconst registrationNumber = ref('')\nconst bucketNum = ref(0)\nconst currentDate = ref('')\n\n// 定位相关状态\nconst isLocating = ref(false)\nconst currentLocation = ref({\n    latitude: 0,\n    longitude: 0,\n    accuracy: 0\n})\n\n// 持续定位相关\nconst locationTimer = ref(null)\nconst isContinuousLocation = ref(false)\nconst isFirstLocation = ref(true) // 标记是否为第一次定位\n\n// 添加一个标志位，表示数据是否已接收\nconst isDataReceived = ref(false)\n\n// 计算总重量\nconst totalEstimateWeight = computed(() => {\n    return taskList.value.reduce((total, task) => {\n        return total + (parseFloat(task.weight) || 0)\n    }, 0).toFixed(1)\n})\n\n//计算已收垃圾桶数\nconst totalBucketNum = computed(() => {\n    return taskList.value.reduce((total, task) => {\n        return total + (parseFloat(task.bucketNum) || 0)\n    }, 0)\n})\n\n\n// 使用UniApp定位\nconst useUniAppLocation = () => {\n    console.log('开始定位...')\n    isLocating.value = true\n\n    // 先检查定位权限\n    checkLocationPermission()\n}\n\n// 开始持续定位\nconst startContinuousLocation = () => {\n    console.log('开始持续定位，间隔20秒')\n    isContinuousLocation.value = true\n\n    // 立即执行一次定位\n    useUniAppLocation()\n\n    // 设置定时器，每20秒定位一次\n    locationTimer.value = setInterval(() => {\n        if (isContinuousLocation.value) {\n            console.log('定时定位触发')\n            useUniAppLocation()\n        }\n    }, 20000) // 20秒 = 20000毫秒\n}\n\n// 停止持续定位\nconst stopContinuousLocation = () => {\n    console.log('停止持续定位')\n    isContinuousLocation.value = false\n\n    if (locationTimer.value) {\n        clearInterval(locationTimer.value)\n        locationTimer.value = null\n    }\n}\n\n// 检查定位权限\nconst checkLocationPermission = () => {\n    uni.getSetting({\n        success: (res) => {\n            console.log('获取权限设置:', res.authSetting)\n\n            if (res.authSetting['scope.userLocation'] === false) {\n                // 用户拒绝过定位权限，需要引导用户手动开启\n                uni.showModal({\n                    title: '定位权限',\n                    content: '需要获取您的地理位置，请前往设置页面开启定位权限',\n                    showCancel: true,\n                    confirmText: '去设置',\n                    success: (modalRes) => {\n                        if (modalRes.confirm) {\n                            uni.openSetting({\n                                success: (settingRes) => {\n                                    if (settingRes.authSetting['scope.userLocation']) {\n                                        // 用户开启了权限，重新定位\n                                        startUniAppLocation()\n                                    } else {\n                                        isLocating.value = false\n                                    }\n                                }\n                            })\n                        } else {\n                            isLocating.value = false\n                        }\n                    }\n                })\n            } else {\n                // 权限正常或未设置，直接定位\n                startUniAppLocation()\n            }\n        },\n        fail: () => {\n            // 获取设置失败，直接尝试定位\n            startUniAppLocation()\n        }\n    })\n}\n\n// 开始UniApp定位\nconst startUniAppLocation = () => {\n    uni.getLocation({\n        type: 'gcj02', // 直接获取GCJ02坐标系的位置\n        altitude: false, // 不需要高度信息\n        success: (res) => {\n            const lat = res.latitude\n            const lng = res.longitude\n\n            console.log('定位成功(GCJ02):', lat, lng)\n\n            // 更新当前位置\n            currentLocation.value = {\n                latitude: lat,\n                longitude: lng,\n                accuracy: res.accuracy || 100\n            }\n\n            // 更新地图中心点\n            mapCenter.value.latitude = lat\n            mapCenter.value.longitude = lng\n\n            console.log('地图中心点已更新为:', lat, lng)\n\n            // 直接执行，不使用nextTick\n            setTimeout(() => {\n                // 添加当前位置标记\n                addCurrentLocationMarker(lat, lng)\n\n                // 添加任务地点标记\n                addTaskMarkers()\n\n                // 绘制路线和规划路径\n                planRoute()\n\n                isLocating.value = false\n\n                // 只在第一次定位成功时显示提示\n                if (isFirstLocation.value) {\n                    uni.showToast({\n                        title: '定位成功，路线规划完成',\n                        icon: 'success'\n                    })\n                    isFirstLocation.value = false // 标记第一次定位完成\n                } else {\n                    console.log('持续定位更新成功，路线已重新规划')\n                }\n            }, 100)\n        },\n        fail: (error) => {\n            console.error('定位失败:', error)\n            isLocating.value = false\n\n            // 根据错误类型给出不同提示\n            let errorMsg = '定位失败'\n            if (error.errMsg) {\n                if (error.errMsg.includes('auth deny')) {\n                    errorMsg = '定位权限被拒绝，请开启定位权限'\n                } else if (error.errMsg.includes('location fail')) {\n                    errorMsg = '定位服务不可用，请检查手机定位设置'\n                } else {\n                    errorMsg = '定位失败：' + error.errMsg\n                }\n            }\n\n            uni.showModal({\n                title: '定位失败',\n                content: errorMsg,\n                showCancel: true,\n                confirmText: '重试',\n                cancelText: '取消',\n                success: (modalRes) => {\n                    if (modalRes.confirm) {\n                        // 用户选择重试\n                        setTimeout(() => {\n                            useUniAppLocation()\n                        }, 1000)\n                    } else {\n                        // 使用默认位置（成都市中心）\n                        useDefaultLocation()\n                    }\n                }\n            })\n        }\n    })\n}\n\n// 使用默认位置\nconst useDefaultLocation = () => {\n    console.log('使用默认位置（成都市中心）')\n    const defaultLat = 30.6586\n    const defaultLng = 104.0647\n\n    currentLocation.value = {\n        latitude: defaultLat,\n        longitude: defaultLng,\n        accuracy: 1000\n    }\n\n    mapCenter.value.latitude = defaultLat\n    mapCenter.value.longitude = defaultLng\n\n    console.log('地图中心点已更新为默认位置:', defaultLat, defaultLng)\n\n    // 直接执行，不使用nextTick\n    setTimeout(() => {\n        // 添加默认位置标记\n        addCurrentLocationMarker(defaultLat, defaultLng)\n\n        // 添加任务地点标记\n        addTaskMarkers()\n\n        // 绘制路线和规划路径\n        planRoute()\n\n        // uni.showToast({\n        //     title: '使用默认位置，路线规划完成',\n        //     icon: 'none'\n        // })\n    }, 100)\n}\n\n// 添加当前位置标记\nconst addCurrentLocationMarker = (lat, lng) => {\n    const marker = {\n        id: 0, // 使用数字ID\n        latitude: lat,\n        longitude: lng,\n        title: '当前位置',\n        iconPath: '/static/ssd/positioning.png',\n        width: 30,\n        height: 30,\n        callout: {\n            content: '当前位置',\n            color: '#000000',\n            fontSize: 12,\n            borderRadius: 5,\n            bgColor: '#ffffff',\n            padding: 5,\n            display: 'ALWAYS'\n        }\n    }\n\n    mapMarkers.value = [marker] // 先清空再添加\n}\n\n// 添加任务地点标记\nconst addTaskMarkers = () => {\n    taskList.value.forEach((task, index) => {\n        // 使用任务数据中的真实经纬度\n        const taskLat = parseFloat(task.lat)\n        const taskLon = parseFloat(task.lon)\n\n        // 验证经纬度是否有效\n        if (isNaN(taskLat) || isNaN(taskLon)) {\n            console.warn(`任务 ${task.merchantName} 的经纬度无效:`, task.lat, task.lon)\n            return\n        }\n\n        const marker = {\n            id: index + 1, // 使用数字ID，从1开始（0已被当前位置使用）\n            latitude: taskLat,\n            longitude: taskLon,\n            title: task.merchantName,\n            iconPath: '/static/ssd/positioning.png',\n            width: 25,\n            height: 25,\n            callout: {\n                content: task.merchantName,\n                color: '#000000',\n                fontSize: 12,\n                borderRadius: 5,\n                bgColor: '#ffffff',\n                padding: 5,\n                display: 'ALWAYS'\n            }\n        }\n\n        mapMarkers.value.push(marker)\n    })\n}\n\n\n// 使用天地图API进行路线规划\nconst planRoute = async () => {\n\n    if (mapMarkers.value.length < 1) {\n        console.log('标记数量不足，无法进行路线规划')\n        return\n    }\n\n    try {\n        // 起点：当前位置（第一个标记点，ID为0）\n        const startPoint = mapMarkers.value.find(marker => marker.id === 0)\n        if (!startPoint) {\n            console.error('找不到起点（当前位置）')\n            return\n        }\n\n        // 任务点：除了起点之外的所有点\n        const taskPoints = mapMarkers.value.filter(marker => marker.id !== 0)\n\n        if (taskPoints.length === 0) {\n            console.log('没有任务点，无法规划路线')\n            return\n        }\n\n        console.log('开始路线规划 - 任务点数量:', taskPoints.length)\n\n        // 将GCJ02坐标转换为WGS84坐标（天地图使用WGS84）\n        const startWgs84Coord = gcoord.transform([startPoint.longitude, startPoint.latitude], gcoord.GCJ02, gcoord.WGS84)\n\n        let midWgs84Coords = []\n        let endWgs84Coord = null\n\n        if (taskPoints.length === 1) {\n            // 只有1个任务点：直接作为终点\n            endWgs84Coord = gcoord.transform([taskPoints[0].longitude, taskPoints[0].latitude], gcoord.GCJ02, gcoord.WGS84)\n        } else {\n            // 多个任务点：最后一个作为终点，其他作为途经点\n            const endPoint = taskPoints[taskPoints.length - 1]\n            const midPoints = taskPoints.slice(0, -1)\n\n            endWgs84Coord = gcoord.transform([endPoint.longitude, endPoint.latitude], gcoord.GCJ02, gcoord.WGS84)\n            midWgs84Coords = midPoints.map(point =>\n                gcoord.transform([point.longitude, point.latitude], gcoord.GCJ02, gcoord.WGS84)\n            )\n\n            console.log('途经点数量:', midPoints.length)\n        }\n\n        // 显示路线规划信息\n        const routeInfo = taskPoints.length === 1 ?\n            `规划直达路线：起点 → ${taskPoints[0].title}` :\n            `规划多点路线：起点 → ${taskPoints.slice(0, -1).map(p => p.title).join(' → ')} → ${taskPoints[taskPoints.length - 1].title}`\n\n        console.log(routeInfo)\n        // uni.showLoading({\n        //     title: '正在规划路线...'\n        // })\n\n        // 调用天地图路径规划API\n        const routeData = await callTiandituRouteAPI(startWgs84Coord, endWgs84Coord, midWgs84Coords)\n\n        if (routeData && typeof routeData === 'string' && routeData.includes('<result')) {\n            // 天地图返回XML格式，需要解析\n            parseRouteXML(routeData)\n        } else {\n            console.log('天地图API返回数据格式异常')\n        }\n    } catch (error) {\n        if (typeof error === 'string' && error.includes('<result')) {\n            // API返回了XML数据，但被当作错误处理\n            parseRouteXML(error)\n        } else {\n            console.error('路线规划失败:', error.message || error)\n            uni.showToast({\n                title: '路线规划失败',\n                icon: 'none'\n            })\n        }\n    } finally {\n        // 确保关闭加载提示\n        uni.hideLoading()\n    }\n}\n\n// 使用配置文件中的天地图API配置\nconst { API_KEY: TIANDITU_API_KEY, TIMEOUT } = TIANDITU_CONFIG\n\n// 坐标验证工具\nconst coordinateValidator = {\n    // 检查坐标是否在合理范围内\n    isValidCoordinate: (lng, lat) => {\n        return lng >= -180 && lng <= 180 && lat >= -90 && lat <= 90\n    }\n}\n\n// 天地图Web API请求函数\nconst requestTiandituApi = (endpoint, params) => {\n    return new Promise((resolve, reject) => {\n        const baseUrl = `https://api.tianditu.gov.cn/${endpoint}`\n\n        // 手动构建查询参数字符串（兼容小程序环境）\n        const queryPairs = []\n        Object.keys(params).forEach(key => {\n            queryPairs.push(`${key}=${encodeURIComponent(params[key])}`)\n        })\n        queryPairs.push(`tk=${TIANDITU_API_KEY}`)\n\n        const fullUrl = `${baseUrl}?${queryPairs.join('&')}`\n\n        uni.request({\n            url: fullUrl,\n            method: 'GET',\n            timeout: TIMEOUT,\n            success: (res) => {\n                // 小程序环境中，statusCode可能为undefined，但data有值就认为成功\n                if (res.data && typeof res.data === 'string' && res.data.includes('<result')) {\n                    resolve(res.data)\n                } else if (res.statusCode === 200) {\n                    resolve(res.data)\n                } else {\n                    reject(res)\n                }\n            },\n            fail: (error) => {\n                console.error('天地图API请求失败:', error)\n                reject(error)\n            }\n        })\n    })\n}\n\n// 调用天地图路径规划API\nconst callTiandituRouteAPI = async (startWgs84Coord, endWgs84Coord, midWgs84Coords = []) => {\n\n    // 构建天地图路线规划请求参数（使用WGS84坐标）\n    const routeParams = {\n        orig: `${startWgs84Coord[0]},${startWgs84Coord[1]}`, // 起点经纬度\n        dest: `${endWgs84Coord[0]},${endWgs84Coord[1]}`,     // 终点经纬度\n        style: '0' // 0: 最快路线, 1: 最短路线, 2: 避开高速, 3: 步行\n    }\n\n    // 如果有途经点，添加mid参数\n    if (midWgs84Coords && midWgs84Coords.length > 0) {\n        // 途经点格式：116.35506,39.92277;116.35506,39.92277\n        const midPointsStr = midWgs84Coords.map(coord =>\n            `${coord[0]},${coord[1]}`\n        ).join(';')\n        routeParams.mid = midPointsStr\n    }\n\n    const params = {\n        postStr: JSON.stringify(routeParams),\n        type: 'search'\n    }\n\n\n    // 调用天地图路线规划API\n    const result = await requestTiandituApi('drive', params)\n\n    return result\n}\n\n// 解析天地图返回的XML数据\nconst parseRouteXML = (xmlData) => {\n\n    try {\n        // 提取关键信息：距离、时间、路线坐标\n\n        // 提取距离信息\n        const distanceMatch = xmlData.match(/<distance>([^<]+)<\\/distance>/)\n        let distance = '未知'\n        if (distanceMatch) {\n            const distanceValue = parseFloat(distanceMatch[1])\n            distance = (distanceValue / 1000).toFixed(1) + 'km'\n        }\n\n        // 提取时间信息\n        const durationMatch = xmlData.match(/<duration>([^<]+)<\\/duration>/)\n        let duration = '未知'\n        if (durationMatch) {\n            const durationValue = parseInt(durationMatch[1])\n            duration = Math.ceil(durationValue / 60) + '分钟'\n        }\n\n        // 提取路线坐标\n        const routeLatLonMatch = xmlData.match(/<routelatlon>([^<]+)<\\/routelatlon>/)\n        if (routeLatLonMatch) {\n            const routeCoords = routeLatLonMatch[1]\n\n            // 解析坐标字符串，格式：116.35506,39.92277;116.35506,39.92277\n            const coordinates = routeCoords.split(';').map(coord => {\n                const [lng, lat] = coord.split(',').map(Number)\n\n                // 检查坐标有效性\n                if (!coordinateValidator.isValidCoordinate(lng, lat)) {\n                    console.warn('无效坐标:', coord)\n                    return null\n                }\n\n                // 天地图返回的是WGS84坐标，需要转换为GCJ02坐标（地图组件使用）\n                const gcj02Coord = gcoord.transform([lng, lat], gcoord.WGS84, gcoord.GCJ02)\n                const gcj02Lng = gcj02Coord[0]\n                const gcj02Lat = gcj02Coord[1]\n\n                return { latitude: gcj02Lat, longitude: gcj02Lng }\n            }).filter(coord => coord !== null) // 过滤掉无效坐标\n\n            if (coordinates.length > 0) {\n                // 绘制路线\n                drawRouteFromCoordinates(coordinates)\n\n                // 计算途经点信息\n                const taskPoints = mapMarkers.value.filter(marker => marker.id !== 0)\n                const routeType = taskPoints.length === 1 ? '直达路线' : `途经${taskPoints.length - 1}个点的路线`\n\n                // uni.showToast({\n                //     title: `${routeType}规划成功\\n距离:${distance} 时间:${duration}`,\n                //     icon: 'success',\n                //     duration: 3000\n                // })\n\n            } else {\n                throw new Error('坐标数组为空')\n            }\n        } else {\n\n            throw new Error('未找到路线坐标信息')\n        }\n\n    } catch (error) {\n        console.error('解析XML数据失败:', error)\n    }\n}\n\n// 根据坐标数组绘制路线\nconst drawRouteFromCoordinates = (coordinates) => {\n    if (!coordinates || coordinates.length === 0) {\n        console.log('坐标数组为空，无法绘制路线')\n        return\n    }\n\n    // 确保坐标格式正确\n    const validCoordinates = coordinates.filter(coord => {\n        const isValid = typeof coord.latitude === 'number' &&\n            typeof coord.longitude === 'number' &&\n            !isNaN(coord.latitude) &&\n            !isNaN(coord.longitude)\n\n        if (!isValid) {\n            console.warn('无效坐标:', coord)\n        }\n\n        return isValid\n    })\n\n    if (validCoordinates.length === 0) {\n        console.error('没有有效的坐标点')\n        return\n    }\n\n    const polyline = {\n        points: validCoordinates,\n        color: '#07c160',\n        width: 4,\n        arrowLine: true,\n        borderColor: '#ffffff',\n        borderWidth: 2\n    }\n\n    // 先清空现有路线\n    mapPolyline.value = []\n\n    // 强制触发响应式更新\n    nextTick(() => {\n        mapPolyline.value = [polyline]\n        console.log('路线已绘制，坐标点数:', validCoordinates.length)\n    })\n}\n\n\n// onLoad: 简单直接的接收参数方式\nonLoad(() => {\n    console.log('页面加载，接收参数')\n\n    // 直接从存储获取数据，简单可靠\n    const mapData = uni.getStorageSync('mapData')\n    if (mapData) {\n        console.log('获取地图数据:', mapData)\n        setMapData(mapData)\n        isDataReceived.value = true\n        // 清理存储数据\n        uni.removeStorageSync('mapData')\n    } else {\n        console.log('暂无数据，等待传递')\n    }\n})\n\n// onMounted: 专门负责初始化地图 - 修复nextTick问题\nonMounted(() => {\n\n\n    // 等待数据接收完成后再初始化地图\n    const waitForDataAndInitMap = () => {\n        if (isDataReceived.value) {\n\n            // 🔥 修复：直接使用setTimeout，不用nextTick\n            setTimeout(() => {\n                // 开始持续定位\n                startContinuousLocation()\n            }, 500) // 减少延迟时间\n        } else {\n            // 数据还没接收完成，继续等待\n            setTimeout(waitForDataAndInitMap, 100)\n        }\n    }\n\n    // 开始等待数据\n    waitForDataAndInitMap()\n})\n\n// 页面卸载时清理定时器\nonUnmounted(() => {\n    stopContinuousLocation()\n})\n\n// 设置地图数据的通用方法\nconst setMapData = (data) => {\n    // 筛选出status == 0的任务数据\n    const filteredTaskList = (data.taskList || []).filter(task => task.status == 0)\n    taskList.value = filteredTaskList\n    driverName.value = data.driverName || ''\n    registrationNumber.value = data.registrationNumber || ''\n    bucketNum.value = data.bucketNum || 0\n    currentDate.value = data.currentDate || ''\n\n}\n\n// 返回上一页\nconst back = () => {\n    // 停止持续定位\n    stopContinuousLocation()\n    uni.navigateBack()\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n    background-color: $bg-theme-color;\n    min-height: 100vh;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n\n\n    .map-container {\n        height: 1000rpx; // 给地图固定高度\n        position: relative;\n\n        .navigation-map {\n            width: 100%;\n            height: 100%;\n        }\n\n        .location-status {\n            position: absolute;\n            top: 30rpx;\n            left: 50%;\n            transform: translateX(-50%);\n            background-color: rgba(255, 255, 255, 0.95);\n            border-radius: 50rpx;\n            padding: 20rpx 30rpx;\n            display: flex;\n            align-items: center;\n            gap: 15rpx;\n            box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.15);\n            z-index: 999;\n            border: 2rpx solid #07C160;\n\n            .status-text {\n                color: #07C160;\n                font-size: 28rpx;\n                font-weight: 500;\n            }\n        }\n\n    }\n\n    .bottom-section {\n        padding: 30rpx;\n        background-color: $bg-theme-color;\n\n        .driver-info-card {\n            background: #FFFFFF;\n            border-radius: 16rpx;\n            padding: 30rpx;\n            margin-bottom: 20rpx;\n\n            .info-item {\n                display: flex;\n                align-items: center;\n                gap: 20rpx;\n                margin-bottom: 20rpx;\n\n                .avatar {\n                    width: 60rpx;\n                    height: 60rpx;\n                    border-radius: 50%;\n                    background-color: #07C160;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n\n                    .avatar-text {\n                        color: white;\n                        font-size: 24rpx;\n                        font-weight: 500;\n                    }\n                }\n\n                .name-info {\n                    flex: 1;\n                    display: flex;\n                    align-items: center;\n                    gap: 10rpx;\n\n                    .label {\n                        color: rgba(61, 61, 61, 0.50);\n                        font-size: 28rpx;\n                    }\n\n                    .value {\n                        color: rgba(61, 61, 61, 1);\n                        font-size: 28rpx;\n                        font-weight: 500;\n                    }\n                }\n            }\n\n            .divider {\n                height: 2rpx;\n                background-color: #f0f0f0;\n                margin: 20rpx 0;\n            }\n\n            .driver-details {\n                display: flex;\n                flex-direction: column;\n                gap: 20rpx;\n\n                .detail-item {\n                    display: flex;\n                    align-items: center;\n\n                    .label {\n                        color: rgba(61, 61, 61, 0.50);\n                        font-size: 28rpx;\n                        min-width: 180rpx;\n                    }\n\n                    .value {\n                        color: rgba(61, 61, 61, 1);\n                        font-size: 28rpx;\n                    }\n                }\n            }\n        }\n\n    }\n}\n\n\nbody {\n    background-color: #F5F5F5;\n}\n</style>\n","import MiniProgramPage from '/Users/yx/Documents/Vue3Projects/cycl/pages/collection/syAllMap.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserStore","ref","computed","uni","gcoord","TIANDITU_CONFIG","nextTick","onLoad","onMounted","onUnmounted"],"mappings":"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"}