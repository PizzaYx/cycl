{"version":3,"file":"shReservation.js","sources":["pages/merchant/shReservation.vue","pages/merchant/shReservation.vue?type=page"],"sourcesContent":["<!-- 临时预约界面 -->\n<template>\n    <view class=\"auth-container\">\n        <PageHeader title=\"临时预约\" @back=\"back\" />\n        <!-- 步骤条 -->\n        <!-- <view class=\"step-container\">\n            <view class=\"step-item\" :class=\"{ active: currentStep >= 1, completed: currentStep > 1 }\">\n                <view class=\"step-circle\">\n                    <text class=\"step-number\" v-if=\"currentStep <= 1\">1</text>\n                    <text class=\"step-check\" v-else>✓</text>\n                </view>\n                <text class=\"step-label\">申请预约</text>\n            </view>\n            <view class=\"step-line\" :class=\"{ active: currentStep > 1 }\"></view>\n            <view class=\"step-item\" :class=\"{ active: currentStep >= 2, completed: currentStep > 2 }\">\n                <view class=\"step-circle\">\n                    <text class=\"step-number\" v-if=\"currentStep <= 2\">2</text>\n                    <text class=\"step-check\" v-else>✓</text>\n                </view>\n                <text class=\"step-label\">待审核</text>\n            </view>\n            <view class=\"step-line\" :class=\"{ active: currentStep > 2 }\"></view>\n            <view class=\"step-item\" :class=\"{ active: currentStep >= 3 }\">\n                <view class=\"step-circle\">\n                    <text class=\"step-number\">3</text>\n                </view>\n                <text class=\"step-label\">预约成功</text>\n            </view>\n        </view> -->\n\n        <!-- 认证表单 -->\n        <view class=\"auth-form\">\n            <view class=\"form-section\" :class=\"{ readonly: isReadOnly }\">\n                <view class=\"status-tip\" v-if=\"isReadOnly\">\n                    <view class=\"tip-content\" v-if=\"authStatus === 'pending'\">\n                        <uni-icons type=\"info\" size=\"16\" color=\"#ff9500\"></uni-icons>\n                        <text class=\"tip-text\">您的预约申请正在审核中，请耐心等待</text>\n                    </view>\n                    <view class=\"tip-content approved\" v-else-if=\"authStatus === 'approved'\">\n                        <uni-icons type=\"checkmarkempty\" size=\"16\" color=\"#07c160\"></uni-icons>\n                        <text class=\"tip-text\">恭喜！您的临时预约已通过</text>\n                    </view>\n                </view>\n\n                <!-- 审核不通过提示 -->\n                <view class=\"status-tip\" v-if=\"authStatus === 'rejected'\">\n                    <view class=\"tip-content rejected\">\n                        <uni-icons type=\"closeempty\" size=\"16\" color=\"#ff4444\"></uni-icons>\n                        <text class=\"tip-text\">很抱歉，您的预约申请未通过审核，请重新提交</text>\n                    </view>\n                </view>\n                <text class=\"section-title\">基本信息</text>\n\n                <!-- 使用uni-forms表单组件 -->\n                <uni-forms ref=\"formRef\" :modelValue=\"formData\" :rules=\"formRules\" label-position=\"top\">\n                    <uni-forms-item label=\"商户名称\" name=\"merchantName\">\n                        <uni-easyinput v-model=\"formData.merchantName\" :clearable=\"false\" :disabled=\"true\">\n                        </uni-easyinput>\n                    </uni-forms-item>\n\n                    <uni-forms-item label=\"商户地址\" name=\"address\">\n                        <uni-easyinput v-model=\"formData.address\" :clearable=\"false\" :disabled=\"true\">\n                        </uni-easyinput>\n                    </uni-forms-item>\n\n                    <uni-forms-item label=\"联系电话\" name=\"contactPhone\">\n                        <uni-easyinput v-model=\"formData.contactPhone\" type=\"number\" maxlength=\"11\" :clearable=\"false\"\n                            :disabled=\"true\">\n                        </uni-easyinput>\n                    </uni-forms-item>\n\n                    <uni-forms-item label=\"预估垃圾桶数(个)\" name=\"bucketCount\" required>\n                        <uni-easyinput v-model=\"formData.bucketCount\" placeholder=\"请输入垃圾桶数量\" type=\"number\"\n                            :clearable=\"false\" :disabled=\"isReadOnly\">\n                        </uni-easyinput>\n                    </uni-forms-item>\n\n                    <uni-forms-item label=\"预估垃圾重量(kg)\" name=\"estimatedWeight\" required>\n                        <uni-easyinput v-model=\"formData.estimatedWeight\" placeholder=\"请输入预估垃圾重量\" type=\"number\"\n                            :clearable=\"false\" :disabled=\"isReadOnly\">\n                        </uni-easyinput>\n                    </uni-forms-item>\n\n                    <uni-forms-item label=\"预约时间\" name=\"estimatedTime\" required>\n                        <!-- 只读状态：使用 uni-easyinput 显示文本 -->\n                        <uni-easyinput v-if=\"isReadOnly\" :value=\"getDateTimeText()\" :disabled=\"true\"\n                            placeholder=\"请选择预约时间\" :clearable=\"false\" />\n                        <!-- 编辑状态：使用 uni-datetime-picker 插槽 -->\n                        <uni-datetime-picker v-else v-model=\"formData.estimatedTime\" type=\"date\" :start=\"minDate\"\n                            :end=\"maxDate\" :clearable=\"false\">\n                            <view class=\"datetime-slot\" @click=\"openDateTimePicker\">\n                                <text v-if=\"formData.estimatedTime\" class=\"datetime-text\">{{\n                                    formatDateTime(formData.estimatedTime) }}</text>\n                                <text v-else class=\"datetime-placeholder\">请选择预约时间</text>\n                                <uni-icons type=\"calendar\" size=\"20\" color=\"#999\"></uni-icons>\n                            </view>\n                        </uni-datetime-picker>\n                    </uni-forms-item>\n\n                    <uni-forms-item label=\"备注说明\" name=\"estimatedRemarks\" required>\n                        <uni-easyinput v-model=\"formData.estimatedRemarks\" placeholder=\"请输入其他要说明的信息\" type=\"text\"\n                            :clearable=\"false\" :disabled=\"isReadOnly\">\n                        </uni-easyinput>\n                    </uni-forms-item>\n\n                </uni-forms>\n            </view>\n\n            <!-- 提交按钮 -->\n            <view class=\"submit-section\" v-if=\"authStatus === 'none' || authStatus === 'rejected'\">\n                <button class=\"submit-btn\" @click=\"submitAuth\" :loading=\"submitting\">\n                    {{ authStatus === 'rejected' ? '重新提交' : '提交' }}\n                </button>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { apiPostaddPlanTemporary } from '@/api/apis.js'\nimport { onLoad } from '@dcloudio/uni-app'\nimport { useUserStore } from '@/stores/user.js'\nimport PageHeader from '@/components/PageHeader/PageHeader.vue'\nconst userStore = useUserStore();\n//返回上一页\nconst back = () => {\n    uni.navigateBack()\n}\n\n// 接收页面参数\nconst props = ref({\n    id: null,\n    status: null\n})\n\nonLoad((options) => {\n    // 接收参数并设置默认值\n    props.value.id = options.id ? parseInt(options.id) : null;\n    props.value.status = options.status ? parseInt(options.status) : null; // 默认为null\n    console.log('接收到的参数:', props.value);\n\n});\n\n\n// 是否为只读状态\nconst isReadOnly = computed(() => {\n    return authStatus.value === 'pending' || authStatus.value === 'approved'\n})\n\n\n// 表单数据\nconst formData = reactive({\n    merchantName: '',\n    address: '',\n    contactPerson: '',\n    contactPhone: '',\n    bucketCount: '',\n    estimatedWeight: '',\n    estimatedTime: '',\n    estimatedRemarks: '',\n})\n\n// 计算最小和最大可选日期\nconst minDate = computed(() => {\n    const now = new Date()\n    return now.toISOString().slice(0, 19).replace('T', ' ')\n})\n\nconst maxDate = computed(() => {\n    const now = new Date()\n    const max = new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000) // 30天后\n    return max.toISOString().slice(0, 19).replace('T', ' ')\n})\n\n// //0:未审核/待审核 1:审核成功 2: 审核不通过\nconst currentStep = computed(() => {\n    const status = props.value.status\n    switch (status) {\n        case 0: // 待审核\n            return 2\n        case 1: // 认证成功\n            return 3\n        case 2: // 审核不通过\n            return 1\n        default: // 未提交\n            return 1\n    }\n})\n\n// 认证状态 - 根据后端状态码正确映射\nconst authStatus = computed(() => {\n    const status = props.value.status\n    switch (status) {\n        case 0: // 未审核/待审核 -> 认证中\n            return 'pending'\n        case 1: // 认证成功 -> 已认证\n            return 'approved'\n        case 2: // 审核不通过 -> 未认证\n            return 'rejected'\n        default: // 未提交认证 -> 未认证\n            return 'none'\n    }\n})\n\n// 表单引用\nconst formRef = ref()\n\n// 表单验证规则\nconst formRules = {\n    bucketCount: {\n        rules: [\n            { required: true, errorMessage: '请输入垃圾桶数量' },\n            {\n                validateFunction: function (rule, value, data, callback) {\n                    if (value && (isNaN(value) || parseInt(value) <= 0)) {\n                        callback('垃圾桶数量必须大于0')\n                    }\n                    return true\n                }\n            }\n        ]\n    },\n    estimatedWeight: {\n        rules: [\n            { required: true, errorMessage: '请输入预估垃圾重量' },\n            {\n                validateFunction: function (rule, value, data, callback) {\n                    if (value && (isNaN(value) || parseFloat(value) <= 0)) {\n                        callback('预估垃圾重量必须大于0')\n                    }\n                    return true\n                }\n            }\n        ]\n    },\n    estimatedTime: {\n        rules: [\n            { required: true, errorMessage: '请选择预约时间' }\n        ]\n    },\n    estimatedRemarks: {\n        rules: [\n            { required: true, errorMessage: '请输入备注说明' }\n        ]\n    }\n}\n\n// 提交状态\nconst submitting = ref(false)\n\n// 获取日期时间文本（用于只读显示）\nconst getDateTimeText = () => {\n    if (formData.estimatedTime) {\n        return formatDateTime(formData.estimatedTime)\n    }\n    return ''\n}\n\n// 格式化日期时间\nconst formatDateTime = (dateTime) => {\n    if (!dateTime) return ''\n    const date = new Date(dateTime)\n    const year = date.getFullYear()\n    const month = String(date.getMonth() + 1).padStart(2, '0')\n    const day = String(date.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n}\n\n// 打开日期时间选择器\nconst openDateTimePicker = () => {\n    // uni-datetime-picker 会自动处理点击事件\n    // 这里可以添加额外的逻辑，比如日志记录等\n}\n\n// 页面加载完成\nonMounted(async () => {\n    // 确保用户信息已加载\n    await userStore.ensureUserInfo()\n\n    // 根据页面状态填充表单数据\n    if (props.value.status !== null) {\n        // 如果有状态，说明是查看或编辑已有预约\n        // 这里可以根据需要调用API获取具体的预约数据\n        // const reservationData = await getReservationData(props.value.id)\n        // fillFormData(reservationData)\n    }\n\n    // 填充基本的用户信息\n    fillFormData(null)\n})\n\n\n// 数据回显函数\nconst fillFormData = (data) => {\n    console.log('开始数据回显:', data, '用户信息:', userStore.userInfo)\n\n    // 基本信息回显 - 从用户store获取\n    formData.merchantName = userStore.merchant?.name || userStore.userInfo?.name || ''\n    formData.address = userStore.merchant?.address || userStore.userInfo?.address || ''\n    formData.contactPerson = userStore.merchant?.contactTruename || userStore.userInfo?.contactTruename || ''\n    formData.contactPhone = userStore.merchant?.contactTel || userStore.userInfo?.contactTel || ''\n\n    // 如果有传入的预约数据，则回显预约相关信息\n    if (data) {\n        formData.bucketCount = data.bucketNum?.toString() || ''\n        formData.estimatedWeight = data.trashWeight?.toString() || ''\n        formData.estimatedTime = data.estimatedTime || ''\n        formData.estimatedRemarks = data.estimatedRemarks || ''\n    }\n\n    console.log('数据回显完成:', formData)\n}\n\n\n// 表单验证（使用uni-forms的验证方式）\nconst validateForm = async () => {\n    try {\n        return await formRef.value.validate()\n    } catch (error) {\n        console.log('表单验证失败:', error)\n        return false\n    }\n}\n\n// 提交预约\nconst submitAuth = async () => {\n    // 先进行表单验证\n    const isValid = await validateForm()\n    if (!isValid) {\n        return\n    }\n    submitting.value = true\n    try {\n        // 准备提交数据 - 只包含API需要的字段\n        const submitData = {\n            merchantId: userStore.merchant?.id, // 用户ID\n            name: formData.merchantName,              // 商户名称\n            address: formData.address,                // 地址\n            contactTruename: formData.contactPerson,  // 联系人姓名\n            contactTel: formData.contactPhone,        // 联系电话\n            bucketNum: parseInt(formData.bucketCount), // 预计桶数量\n            trashWeight: parseInt(formData.estimatedWeight), // 预估垃圾重量\n            appointmentTime: formData.estimatedTime,    // 预约时间\n            explain: formData.estimatedRemarks, // 备注说明\n        }\n\n        // 调用临时预约提交API\n        const result = await apiPostaddPlanTemporary(submitData)\n        console.log('预约提交API返回:', submitData)\n\n        // 检查返回结果\n        if (result && result.code === 200) {\n            uni.showToast({\n                title: '预约申请提交成功',\n                icon: 'success'\n            })\n\n            // 更新页面状态 - 提交成功后状态为待审核(0)\n            props.value.status = 0\n\n            // 延迟返回上一页，让用户看到成功提示\n            setTimeout(() => {\n                uni.navigateBack()\n            }, 1000)\n        } else {\n            // 处理API返回的错误信息\n            uni.showToast({\n                title: result?.msg || '提交失败，请重试',\n                icon: 'none'\n            })\n        }\n\n    } catch (error) {\n        console.error('提交认证失败:', error)\n        uni.showToast({\n            title: '提交失败，请重试',\n            icon: 'none'\n        })\n    } finally {\n        submitting.value = false\n    }\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n.auth-container {\n    min-height: 100vh;\n    background: $bg-theme-color;\n    padding: 0 30rpx 30rpx;\n\n\n    // 步骤条样式\n    .step-container {\n        background: #ffffff;\n        padding: 40rpx 30rpx;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin: 30rpx 0;\n        height: 144rpx;\n        border-radius: 20rpx;\n\n        .step-item {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 16rpx;\n\n            &.active {\n                .step-circle {\n                    width: 48rpx;\n                    height: 48rpx;\n                    background: rgba(7, 193, 96, 1);\n                    color: #fff;\n                }\n\n                .step-label {\n                    color: #07c160;\n                    font-weight: 400;\n                }\n            }\n\n            &.completed .step-circle {\n                background: #07c160;\n                color: #fff;\n            }\n        }\n\n        .step-circle {\n            width: 48rpx;\n            height: 48rpx;\n            border-radius: 50%;\n            background: rgba(217, 217, 217, 1);\n            color: #fff;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 24rpx;\n            font-weight: 400;\n            transition: all 0.3s ease;\n        }\n\n        .step-number,\n        .step-check {\n            font-size: 24rpx;\n            font-weight: 400;\n        }\n\n        .step-label {\n            font-size: 24rpx;\n            color: rgba(61, 61, 61, 1);\n            text-align: center;\n        }\n\n        .step-line {\n            flex: 1;\n            height: 2rpx;\n            background: #e5e5e5;\n            margin: 0 20rpx;\n            margin-top: -45rpx; // 向上偏移，与圆圈居中对齐\n            transition: all 0.3s ease;\n\n            &.active {\n                background: #07c160;\n            }\n        }\n    }\n\n    // 表单样式\n    .auth-form {\n        .form-section {\n            background: #ffffff;\n            border-radius: 16rpx;\n            padding: 30rpx;\n            margin-bottom: 30rpx;\n            margin-top: 30rpx;\n            box-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.05);\n\n            .status-tip {\n                margin-bottom: 20rpx;\n\n                .tip-content {\n                    display: flex;\n                    align-items: center;\n                    gap: 8rpx;\n                    padding: 16rpx 20rpx;\n                    background-color: #f8f9fa;\n                    border-radius: 8rpx;\n                    border-left: 4rpx solid #ff9500;\n\n                    &.approved {\n                        border-left-color: #07c160;\n                    }\n\n                    &.rejected {\n                        border-left-color: #ff4444;\n                    }\n\n                    .tip-text {\n                        font-size: 26rpx;\n                        color: #666666;\n                    }\n                }\n            }\n\n            .section-title {\n                font-size: 32rpx;\n                font-weight: bold;\n                color: rgba(38, 38, 38, 1);\n                margin-bottom: 30rpx;\n                display: block;\n            }\n\n            // uni-forms组件样式调整\n            :deep(.uni-forms-item) {\n                margin-bottom: 40rpx; // 增加表单项之间的间距\n\n                // 标签样式调整\n                .uni-forms-item__label {\n                    font-size: 28rpx !important;\n                    color: rgba(38, 38, 38, 1) !important;\n                    margin-bottom: 0rpx !important; // 标签和输入框的间距\n                    white-space: nowrap !important; // 防止标签换行\n\n                    .uni-forms-item__label-text {\n                        white-space: nowrap !important;\n                    }\n                }\n\n                // 错误信息样式调整 - 恢复原始位置但优化样式\n                .uni-forms-item__error {\n                    margin-top: 8rpx !important; // 与输入框的间距\n                    margin-bottom: 20rpx !important; // 与下一个表单项的间距\n                    font-size: 24rpx !important;\n                    color: #ff4444 !important;\n                    line-height: 1.4 !important;\n                    background: transparent !important;\n                }\n            }\n\n\n            // uni-easyinput样式调整，参照shCertification.vue的input-field样式\n            // 使用!important是因为uni-app组件有内联样式和深层嵌套样式，需要强制覆盖\n            :deep(.uni-easyinput) {\n                .uni-easyinput__content {\n                    border: none !important;\n                    border-radius: 0 !important;\n                    border-bottom: 2rpx solid #e5e5e5 !important;\n                    background: transparent !important;\n                    padding: 0 !important;\n                    height: 55rpx !important;\n                    display: flex !important;\n                    align-items: center !important;\n                    justify-content: flex-start !important;\n                    position: relative !important;\n                    width: calc(100% - 24rpx) !important; // 减去左右边距，与下划线对齐\n                    margin-left: 12rpx !important; // 可输入状态：向右偏移12rpx来对齐*号\n                    margin-right: 12rpx !important; // 右边距12rpx，与下划线对齐\n                    box-sizing: border-box !important;\n\n                    &.is-focused {\n                        border-bottom-color: #07c160 !important;\n                    }\n\n                    // 只读状态：不偏移，因为没有*号\n                    &.is-disabled {\n                        margin-left: 0 !important;\n                        margin-right: 0 !important;\n                        width: 100% !important;\n                    }\n                }\n\n                .uni-easyinput__content-input {\n                    font-size: 28rpx !important;\n                    color: rgba(38, 38, 38, 1) !important;\n                    height: 40rpx !important; // 设置固定高度\n                    line-height: 40rpx !important; // 行高与高度一致实现垂直居中\n                    padding: 0 !important;\n                    margin: 0 !important;\n                    flex: 1 !important;\n                    text-align: left !important;\n                    box-sizing: border-box !important;\n                }\n\n                .uni-easyinput__placeholder-class {\n                    color: rgba(191, 191, 191, 1) !important;\n                    font-size: 28rpx !important;\n                    line-height: 40rpx !important;\n                    text-align: left !important;\n                }\n\n            }\n\n            // uni-data-select样式调整，与uni-easyinput保持一致\n            :deep(.uni-data-select) {\n                .uni-data-select__input-box {\n                    border: none !important;\n                    border-radius: 0 !important;\n                    border-bottom: 2rpx solid #e5e5e5 !important;\n                    background: transparent !important;\n                    padding: 0 !important;\n                    height: 55rpx !important;\n                    box-shadow: none !important;\n                    display: flex !important;\n                    align-items: center !important;\n                    justify-content: flex-start !important;\n                    position: relative !important;\n                    width: calc(100% - 24rpx) !important; // 减去左右边距，与下划线对齐\n                    margin-left: 12rpx !important; // 可输入状态：向右偏移12rpx来对齐*号\n                    margin-right: 12rpx !important; // 右边距12rpx，与下划线对齐\n                    box-sizing: border-box !important;\n\n                    .uni-data-select__input {\n                        font-size: 28rpx !important;\n                        color: rgba(38, 38, 38, 1) !important;\n                        height: 40rpx !important; // 设置固定高度\n                        line-height: 40rpx !important; // 行高与高度一致\n                        border: none !important;\n                        padding: 0 !important;\n                        margin: 0 !important;\n                        flex: 1 !important;\n                        text-align: left !important;\n                        box-sizing: border-box !important;\n                    }\n\n                    .uni-data-select__input.uni-data-select__input--placeholder {\n                        color: rgba(191, 191, 191, 1) !important;\n                        line-height: 40rpx !important;\n                        text-align: left !important;\n                    }\n\n                }\n\n                // 移除选择器的外层边框\n                .uni-data-select__selector {\n                    border: none !important;\n                    box-shadow: none !important;\n                }\n\n                // 移除可能存在的其他边框\n                &>view {\n                    border: none !important;\n                }\n            }\n\n            // 日期时间选择器插槽样式，与其他输入框保持一致\n            .datetime-slot {\n                border: none;\n                border-bottom: 2rpx solid #e5e5e5;\n                padding: 0;\n                height: 55rpx;\n                display: flex;\n                align-items: center;\n                justify-content: flex-start;\n                cursor: pointer;\n                position: relative;\n                width: calc(100% - 24rpx); // 减去左右边距，与下划线对齐\n                margin-left: 12rpx; // 可输入状态：向右偏移12rpx来对齐*号\n                margin-right: 12rpx; // 右边距12rpx，与下划线对齐\n                box-sizing: border-box;\n\n                .datetime-text {\n                    font-size: 28rpx;\n                    color: rgba(38, 38, 38, 1);\n                    flex: 1;\n                    line-height: 40rpx; // 与输入框保持一致\n                    display: flex;\n                    align-items: center;\n                    text-align: left;\n                }\n\n                .datetime-placeholder {\n                    color: rgba(191, 191, 191, 1);\n                    font-size: 28rpx;\n                    flex: 1;\n                    line-height: 40rpx; // 与输入框保持一致\n                    display: flex;\n                    align-items: center;\n                    text-align: left;\n                }\n\n\n                &:active {\n                    background-color: rgba(0, 0, 0, 0.05);\n                }\n            }\n\n            // 日期时间选择器样式（仅在编辑状态使用）\n            :deep(.uni-datetime-picker) {\n                .uni-date-editor--x {\n                    border: none !important;\n                    border-bottom: 2rpx solid #e5e5e5 !important;\n                    background: transparent !important;\n                    padding: 0 !important;\n                    height: 55rpx !important;\n                    display: flex !important;\n                    align-items: center !important;\n                    justify-content: flex-start !important;\n                    position: relative !important;\n                    width: calc(100% - 24rpx) !important; // 减去左右边距，与下划线对齐\n                    margin-left: 12rpx !important; // 可输入状态：向右偏移12rpx来对齐*号\n                    margin-right: 12rpx !important; // 右边距12rpx，与下划线对齐\n                    box-sizing: border-box !important;\n\n                    .uni-date__x-input {\n                        font-size: 28rpx !important;\n                        color: rgba(38, 38, 38, 1) !important;\n                        height: 40rpx !important;\n                        line-height: 40rpx !important;\n                        padding: 0 !important;\n                        margin: 0 !important;\n                        flex: 1 !important;\n                        text-align: left !important;\n                        box-sizing: border-box !important;\n                    }\n\n                    .uni-date__x-input-placeholder {\n                        color: rgba(191, 191, 191, 1) !important;\n                        font-size: 28rpx !important;\n                        line-height: 40rpx !important;\n                        text-align: left !important;\n                    }\n                }\n\n                &.uni-date-x--border {\n                    border: none !important;\n                }\n\n                .uni-date-single--x,\n                .uni-date-range--x {\n                    top: 60rpx !important;\n                }\n            }\n\n            // 上传提示样式\n            .upload-tip {\n                font-size: 24rpx;\n                color: #999999;\n                margin-top: 10rpx;\n                line-height: 1.4;\n            }\n\n            // 位置选择器样式，与其他输入框保持一致\n            .location-picker {\n                .location-input {\n                    border: none;\n                    border-bottom: 2rpx solid #e5e5e5;\n                    padding: 0 30rpx 10rpx 30rpx; // 左右各30rpx边距\n                    height: 60rpx;\n                    display: flex;\n                    align-items: center;\n                    justify-content: flex-start;\n                    cursor: pointer;\n                    position: relative;\n\n                    .location-info {\n                        display: flex;\n                        flex-direction: column;\n                        gap: 2rpx; // 减小间距\n                        flex: 1;\n                        justify-content: center;\n                        align-items: flex-start;\n                        transform: translateY(10rpx); // 向下偏移10rpx\n\n                        .location-name {\n                            font-size: 28rpx;\n                            color: rgba(38, 38, 38, 1);\n                            font-weight: 500;\n                            line-height: 1.3;\n                            text-align: left;\n                        }\n\n                        .location-coords {\n                            font-size: 20rpx; // 稍微减小字体\n                            color: #666666;\n                            line-height: 1.2;\n                            text-align: left;\n                        }\n                    }\n\n                    .location-placeholder {\n                        color: rgba(191, 191, 191, 1);\n                        font-size: 28rpx;\n                        flex: 1;\n                        line-height: 40rpx; // 与输入框保持一致\n                        display: flex;\n                        align-items: center;\n                        text-align: left;\n                        transform: translateY(10rpx); // 向下偏移10rpx\n                    }\n\n                    // 位置图标也向下偏移\n                    .uni-icons {\n                        transform: translateY(10rpx) !important;\n                    }\n\n                    &:active {\n                        background-color: rgba(0, 0, 0, 0.05);\n                    }\n\n                    &.disabled {\n                        cursor: not-allowed;\n                        opacity: 0.6;\n\n                        &:active {\n                            background-color: transparent;\n                        }\n                    }\n                }\n            }\n\n            // 禁用状态样式（等同于只读样式）\n            :deep(.uni-easyinput) {\n                .uni-easyinput__content.is-disabled {\n                    margin-left: 12rpx !important;\n                    margin-right: 12rpx !important;\n                    width: calc(100% - 24rpx) !important;\n\n                    .uni-easyinput__content-input {\n                        color: rgba(38, 38, 38, 1) !important; // 禁用状态保持正常字体颜色\n                    }\n                }\n            }\n\n            // 禁用字段的label样式（等同于只读样式）\n            // 商户名称、商户地址、联系电话字段整体向左缩进12rpx\n            :deep(.uni-forms-item) {\n\n                &:nth-child(1),\n                &:nth-child(2),\n                &:nth-child(3) {\n                    .uni-forms-item__label {\n                        margin-left: 12rpx !important;\n                    }\n                }\n            }\n\n            // 只读状态样式\n            &.readonly {\n\n                // 只读状态：label不显示*号，需要偏移12rpx来对齐\n                :deep(.uni-forms-item__label) {\n                    margin-left: 12rpx !important;\n                }\n\n                :deep(.uni-easyinput) {\n                    .uni-easyinput__content {\n                        margin-left: 0 !important;\n                        margin-right: 0 !important;\n                        width: 100% !important;\n\n                        .uni-easyinput__content-input {\n                            color: rgba(38, 38, 38, 1) !important; // 只读状态保持正常颜色\n                        }\n                    }\n                }\n\n                :deep(.uni-data-select) {\n                    .uni-data-select__input-box {\n                        margin-left: 0 !important;\n                        margin-right: 0 !important;\n                        width: 100% !important;\n\n                        .uni-data-select__input {\n                            color: rgba(38, 38, 38, 1) !important; // 只读状态保持正常颜色\n                        }\n                    }\n                }\n\n                :deep(.uni-datetime-picker) {\n                    .uni-date-editor--x {\n                        margin-left: 0 !important;\n                        margin-right: 0 !important;\n                        width: 100% !important;\n\n                        .uni-date__x-input {\n                            color: rgba(38, 38, 38, 1) !important; // 只读状态保持正常颜色\n                        }\n                    }\n                }\n\n                // 只读状态下插槽内容的样式\n                .datetime-slot {\n                    margin-left: 0 !important;\n                    margin-right: 0 !important;\n                    width: 100% !important;\n\n                    .datetime-text {\n                        color: rgba(38, 38, 38, 1) !important; // 只读状态保持正常颜色\n                    }\n\n                    .datetime-placeholder {\n                        color: rgba(38, 38, 38, 1) !important; // 只读状态保持正常颜色\n                    }\n                }\n\n                :deep(.uni-file-picker) {\n                    opacity: 0.6;\n                    pointer-events: none;\n                }\n            }\n        }\n    }\n\n\n    // 上传区域样式（保留旧的，以防需要）\n    .upload-group {\n        display: flex;\n        flex-direction: column;\n        gap: 30rpx;\n\n        .upload-item {\n            display: flex;\n            flex-direction: column;\n            gap: 15rpx;\n\n            .upload-label {\n                font-size: 28rpx;\n                color: #333333;\n                font-weight: 500;\n            }\n\n            .upload-area {\n                width: 100%;\n                height: 200rpx;\n                background: #f8f8f8;\n                border: 2rpx dashed #cccccc;\n                border-radius: 12rpx;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                overflow: hidden;\n\n                .upload-placeholder {\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    gap: 10rpx;\n\n                    .upload-icon {\n                        font-size: 48rpx;\n                    }\n\n                    .upload-text {\n                        font-size: 24rpx;\n                        color: #999999;\n                    }\n                }\n\n                .uploaded-image {\n                    width: 100%;\n                    height: 100%;\n                }\n            }\n        }\n    }\n\n    // 提交按钮样式\n    .submit-section {\n        padding: 0 30rpx;\n        margin-top: 40rpx;\n\n        .submit-btn {\n            width: 100%;\n            height: 80rpx;\n            background: linear-gradient(135deg, #07c160 0%, #10ad6a 100%);\n            color: #ffffff;\n            border-radius: 60rpx;\n            font-size: 32rpx;\n            font-weight: bold;\n            border: none;\n\n            &:disabled {\n                background: #cccccc;\n                color: #999999;\n            }\n\n            &:active:not(:disabled) {\n                transform: scale(0.98);\n            }\n        }\n    }\n\n}\n</style>","import MiniProgramPage from '/Users/yx/Documents/Vue3Projects/cycl/pages/merchant/shReservation.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserStore","uni","ref","onLoad","computed","reactive","onMounted","apiPostaddPlanTemporary"],"mappings":"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"}