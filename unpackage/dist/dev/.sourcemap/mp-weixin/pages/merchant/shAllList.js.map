{"version":3,"file":"shAllList.js","sources":["pages/merchant/shAllList.vue","pages/merchant/shAllList.vue?type=page"],"sourcesContent":["<!-- 收运总记录-->\n<template>\n    <view class=\"container\">\n        <uni-nav-bar dark :fixed=\"true\" background-color=\"#fff\" status-bar left-icon=\"left\" color=\"#000\" title=\"收运记录\"\n            @clickLeft=\"back\" />\n\n        <view class=\"menu\">\n\n            <view class=\"filter-container\">\n                <!-- 状态选择器组件 -->\n                <StatusPicker v-model=\"selectedStatus\" :options=\"statusOptions\" @change=\"onStatusChange\" />\n\n\n                <!-- 时间范围选择器组件 -->\n                <TimeRangePicker v-model=\"selectedTimeRange\" @change=\"onTimeChange\" />\n            </view>\n        </view>\n\n        <!-- 内容区域 -->\n        <view class=\"content-wrapper\">\n            <scroll-view class=\"content\" scroll-y>\n                <!-- 数据列表 -->\n                <view class=\"order-list\" v-if=\"allOrderList.length > 0\">\n                    <view class=\"order-item\" v-for=\"(item, index) in allOrderList\" :key=\"index\">\n                        <view class=\"order-header\">\n                            <view class=\"shop-info\">\n                                <text class=\"shop-name\">{{ item.merchantName }}</text>\n                                <text :class=\"['status-tag', getStatusClass(item.status)]\">\n                                    {{ getStatusText(item.status) }}\n                                </text>\n                            </view>\n\n                        </view>\n                        <view class=\"order-content\">\n                            <view class=\"info-item\">\n                                <text class=\"label\">今日收运：</text>\n                                <text class=\"value\">{{ item.deliveryCount ?? 0 }} 桶</text>\n                            </view>\n                            <view class=\"info-item\">\n                                <text class=\"label\">预估重量：</text>\n                                <text class=\"value\">{{ item.estimateWeight ?? 0 }} kg</text>\n                            </view>\n                            <view class=\"info-item\">\n                                <text class=\"label\">收运重量：</text>\n                                <text class=\"value\">{{ item.weight ?? 0 }} kg</text>\n                            </view>\n                            <view class=\"info-item\">\n                                <text class=\"label\">车辆信息：</text>\n                                <text class=\"value\">{{ item.registrationNumber ?? \"暂无\" }}</text>\n                            </view>\n                            <view class=\"info-item\">\n                                <text class=\"label\">预估时间：</text>\n                                <text class=\"value\">{{ item.appointmentTime ?? \"暂无\" }}</text>\n                            </view>\n                            <view class=\"info-item\">\n                                <text class=\"label\">收运时间：</text>\n                                <text class=\"value\">{{ item.arrivalTime ?? \"暂无\" }}</text>\n                            </view>\n                        </view>\n                        <view class=\"order-footer\">\n                            <uni-button v-if=\"item.status != 0\" size=\"mini\" type=\"default\" class=\"btn-confirm\"\n                                @tap=\"handleViewDetails(item)\">\n                                查看详情\n                            </uni-button>\n                        </view>\n                    </view>\n\n                    <!-- 加载更多组件 - 只在有数据时显示 -->\n                    <view class=\"loadMore\">\n                        <uni-load-more :status=\"loadingStatus\" :content-text=\"{\n                            contentdown: '上拉显示更多',\n                            contentrefresh: '正在加载...',\n                            contentnomore: '没有更多数据了'\n                        }\"></uni-load-more>\n                    </view>\n                </view>\n\n                <!-- 暂无数据状态 -->\n                <view class=\"empty-state\" v-else-if=\"loadingStatus !== 'loading'\">\n                    <view class=\"empty-icon\">📋</view>\n                    <text class=\"empty-text\">暂无数据</text>\n                    <text class=\"empty-desc\">当前分类下暂时没有相关信息</text>\n                </view>\n            </scroll-view>\n        </view>\n    </view>\n</template>\n<script setup>\nimport {\n    ref,\n    computed,\n    onMounted\n} from 'vue';\nimport {\n    onPullDownRefresh,\n    onReachBottom\n} from '@dcloudio/uni-app';\n\nimport {\n    apiGetPlanAllPage\n} from '@/api/apis.js';\n\nimport { useUserStore } from '@/stores/user.js'\nimport TimeRangePicker from '@/components/TimeRangePicker/TimeRangePicker.vue'\nimport StatusPicker from '@/components/StatusPicker/StatusPicker.vue'\n\n\n\n\nconst userStore = useUserStore();\n\n// 筛选相关状态\nconst selectedStatus = ref(''); // 选中的状态\nconst selectedTimeRange = ref([]); // 选中的时间范围\n\n// 状态选项配置 (0 待确认 1 已完成 2 无需收运)\nconst statusOptions = ref([\n    { value: 0, text: '待确认' },\n    { value: 1, text: '已完成' },\n    { value: 2, text: '无需收运' }\n]);\n\n// 状态转换函数\nconst getStatusText = (status) => {\n    console.log(123)\n    switch (status) {\n        case 0:\n        case '0':\n            return '待确认';\n        case 1:\n        case '1':\n            return '已完成';\n        case 2:\n        case '2':\n            return '无需收运';\n        default:\n            return '未知状态';\n    }\n};\n\n// 获取状态样式类名\nconst getStatusClass = (status) => {\n    switch (status) {\n        case 0:\n        case '0':\n            return 'booking'; // 待确认 - 蓝色\n        case 1:\n        case '1':\n            return 'completed'; // 已完成 - 灰色\n        case 2:\n        case '2':\n            return 'processing'; // 无需收运 - 绿色\n        default:\n            return 'completed';\n    }\n};\n//返回上一页\nconst back = () => {\n    uni.navigateBack()\n}\n\n// 添加页码和加载状态变量\nconst pageNum = ref(1);\nconst loadingStatus = ref('more'); // more-加载前/loading-加载中/nomore-没有更多数据\n\n// 数据列表\nconst allOrderList = ref([]);\n\n\nconst handleViewDetails = (item) => {\n    console.log('查看详情按钮被点击', item);\n    uni.navigateTo({\n        url: `/pages/merchant/shsyDetail?id=${item.id}&merchantId =${item.merchantId}`\n    });\n};\n\n//后获取数据\nconst getNetwork = async () => {\n    try {\n        // 如果不是第一页，设置加载状态为加载中\n        if (pageNum.value > 1) {\n            loadingStatus.value = 'loading';\n        }\n\n        // 构建请求参数\n        const params = {\n            pageNum: pageNum.value,\n            merchantId: userStore.merchant?.id,\n        };\n\n        // 添加筛选条件\n        if (selectedStatus.value !== null) {\n            params.status = selectedStatus.value;\n        }\n\n        if (selectedTimeRange.value && selectedTimeRange.value.length === 2) {\n            params.startTime = selectedTimeRange.value[0];\n            params.endTime = selectedTimeRange.value[1];\n        }\n\n        const res = await apiGetPlanAllPage(params);\n\n\n        // 处理下拉刷新\n        if (pageNum.value === 1) {\n            allOrderList.value = res.data.list || [];\n            uni.stopPullDownRefresh();\n        } else {\n            // 处理上拉加载更多\n            allOrderList.value = [...allOrderList.value, ...(res.data.list || [])];\n        }\n\n        // 判断是否还有更多数据\n        if (res.data.list && res.data.list.length < 10) {\n            // 如果返回的数据少于每页数量，说明没有更多数据了\n            loadingStatus.value = 'nomore';\n        } else {\n            // 否则还有更多数据\n            loadingStatus.value = 'more';\n        }\n    } catch (error) {\n        console.error('获取数据失败:', error);\n\n        // 停止下拉刷新\n        uni.stopPullDownRefresh();\n\n        // 重置加载状态\n        loadingStatus.value = 'more';\n\n        // 如果是第一页加载失败，确保显示暂无数据状态\n        if (pageNum.value === 1) {\n            allOrderList.value = [];\n        }\n\n        uni.showToast({\n            title: '数据加载失败，请重试',\n            icon: 'none',\n            duration: 2000\n        });\n    }\n};\n\n\n// 上拉加载更多方法\nconst onLoadMore = () => {\n    if (loadingStatus.value === 'nomore') return;\n    // 页码增加\n    pageNum.value++;\n    getNetwork();\n};\n\n\n// 触底加载更多\nonReachBottom(() => {\n    onLoadMore();\n});\n\n//下拉刷新\nonPullDownRefresh(() => {\n    allOrderList.value = [];\n    pageNum.value = 1; // 重置页码为1\n    getNetwork();\n})\n\n// 引用选择器组件\nconst datetimePicker = ref(null);\n\n// 筛选相关方法\n\nconst onStatusChange = (value) => {\n    selectedStatus.value = value;\n    // 重置页面并重新加载数据\n    resetPageAndReload();\n};\n\n\nconst onTimeChange = (value) => {\n    selectedTimeRange.value = value;\n    // 重置页面并重新加载数据\n    resetPageAndReload();\n};\n\n\nconst resetPageAndReload = () => {\n    allOrderList.value = [];\n    pageNum.value = 1;\n    getNetwork();\n};\n\n\n// 获取当前日期时间（包含时分秒）\nconst getCurrentDateTime = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    const hour = String(now.getHours()).padStart(2, '0');\n    const minute = String(now.getMinutes()).padStart(2, '0');\n    const second = String(now.getSeconds()).padStart(2, '0');\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n};\n\n\n// 组件挂载时初始化数据\nonMounted(() => {\n    pageNum.value = 1;\n    getNetwork();\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    background-color: $bg-theme-color;\n\n    .menu {\n        position: relative;\n        margin-top: 2rpx;\n        background-color: #ffffff;\n        padding: 0 30rpx;\n\n        .filter-container {\n            display: flex;\n            align-items: center; // 垂直居中\n            justify-content: space-around; // 水平平分空间\n            height: 88rpx;\n\n            .filter-item {\n                display: flex;\n                align-items: center;\n                gap: 10rpx; // 文字和箭头紧挨着\n                min-height: 60rpx;\n\n                text {\n                    font-size: 28rpx;\n                    color: #333;\n                }\n            }\n\n            .filter-select {\n\n                // 自定义 uni-datetime-picker 样式 - 彻底移除所有背景\n                :deep(.uni-datetime-picker) {\n                    // 移除组件本身的所有样式\n                    background: transparent !important;\n                    border: none !important;\n\n                    .uni-datetime-picker--btn {\n                        border: none !important;\n                        background: transparent !important;\n                        background-color: transparent !important;\n                        padding: 0 !important;\n                        box-shadow: none !important;\n                        outline: none !important;\n\n                        // 强制移除所有可能的背景状态\n                        &:before,\n                        &:after {\n                            display: none !important;\n                        }\n\n                        &:active,\n                        &:focus,\n                        &:hover,\n                        &:visited,\n                        &:target {\n                            background: transparent !important;\n                            background-color: transparent !important;\n                            box-shadow: none !important;\n                            outline: none !important;\n                        }\n\n                        .uni-datetime-picker-text {\n                            font-size: 26rpx !important;\n                            color: #333 !important;\n                            background: transparent !important;\n                        }\n                    }\n\n                    // 移除可能存在的其他子元素背景\n                    view,\n                    text,\n                    input {\n                        background: transparent !important;\n                        background-color: transparent !important;\n                    }\n                }\n            }\n\n\n        }\n    }\n\n    .content-wrapper {\n        flex: 1;\n\n\n        .content {\n            height: 100%;\n        }\n\n        .order-list {\n            padding: 30rpx; // 上下左右30rpx\n\n            .order-item {\n                margin-bottom: 30rpx;\n                padding: 30rpx;\n                background-color: #fff;\n                border-radius: 12rpx;\n\n                &:last-child {\n                    margin-bottom: 0;\n                }\n\n\n                .order-header {\n                    margin-bottom: 20rpx;\n\n                    .shop-info {\n                        display: flex;\n                        align-items: center;\n                        justify-content: space-between;\n                        margin-bottom: 16rpx;\n\n                        .shop-name {\n                            font-size: 28rpx;\n                            font-weight: 400;\n                            color: rgba(61, 61, 61, 1);\n                        }\n\n                        .status-tag {\n                            border-radius: 8rpx;\n                            font-size: 24rpx;\n                            width: 120rpx;\n                            height: 40rpx;\n                            display: flex;\n                            justify-content: center;\n                            align-items: center;\n\n                            &.booking {\n                                color: rgba(255, 161, 0, 1);\n                                background-color: rgba(255, 161, 0, 0.10);\n                            }\n\n                            &.processing {\n                                color: rgba(7, 193, 96, 1);\n                                background-color: rgba(7, 193, 96, 0.10);\n                            }\n\n                            &.completed {\n                                color: rgba(61, 61, 61, 0.50);\n                                background-color: rgba(61, 61, 61, 0.10);\n                            }\n                        }\n                    }\n\n\n                }\n\n                .order-content {\n                    padding: 20rpx 0;\n                    border-top: 1px solid #f0f0f0;\n                    border-bottom: 1px solid #f0f0f0;\n\n                    .info-item {\n                        display: flex;\n                        margin-bottom: 16rpx;\n\n                        &:last-child {\n                            margin-bottom: 0;\n                        }\n\n                        .label {\n                            font-size: 26rpx;\n                            color: rgba(61, 61, 61, 0.50);\n                        }\n\n                        .value {\n                            margin-left: 100rpx;\n                            font-size: 26rpx;\n                            color: rgba(61, 61, 61, 1);\n                        }\n                    }\n                }\n\n                .order-footer {\n                    display: flex;\n                    justify-content: flex-end;\n                    margin-top: 20rpx;\n\n                    .btn-cancel {\n                        margin-right: 20rpx;\n                        color: rgba(61, 61, 61, 1);\n                        background-color: #fff;\n                        border: 1px solid rgba(196, 196, 196, 1);\n                        font-size: 26rpx;\n                        width: 144rpx;\n                        height: 48rpx;\n                        border-radius: 20rpx;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        box-sizing: border-box; // 使用border-box盒模型\n\n                    }\n\n                    .btn-confirm {\n                        color: rgba(7, 193, 96, 1);\n\n                        border: 1rpx solid rgba(7, 193, 96, 1);\n                        font-size: 26rpx;\n                        width: 144rpx;\n                        height: 48rpx;\n                        border-radius: 20rpx;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        box-sizing: border-box; // 使用border-box盒模型\n                    }\n                }\n            }\n        }\n    }\n\n    .loadMore {\n        padding-bottom: calc(env(safe-area-inset-bottom) + 50);\n    }\n\n    // 暂无数据状态\n    .empty-state {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        min-height: calc(100vh - 200rpx); // 确保占满剩余屏幕高度\n        padding: 120rpx 60rpx;\n        text-align: center;\n        background-color: #ffffff;\n\n        .empty-icon {\n            font-size: 120rpx;\n            margin-bottom: 30rpx;\n            opacity: 0.3;\n        }\n\n        .empty-text {\n            font-size: 32rpx;\n            color: rgba(61, 61, 61, 0.6);\n            margin-bottom: 16rpx;\n            font-weight: 500;\n        }\n\n        .empty-desc {\n            font-size: 26rpx;\n            color: rgba(61, 61, 61, 0.4);\n            line-height: 1.5;\n        }\n    }\n\n    // 自定义导航栏字体大小为34rpx\n    :deep(.uni-navbar__content-title) {\n        font-size: 34rpx !important;\n    }\n\n    :deep(.uni-nav-bar-text) {\n        font-size: 34rpx !important;\n    }\n}\n</style>\n","import MiniProgramPage from '/Users/yx/Documents/Vue3Projects/cycl/pages/merchant/shAllList.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserStore","ref","uni","apiGetPlanAllPage","onReachBottom","onPullDownRefresh","onMounted"],"mappings":"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"}