{"version":3,"file":"user.js","sources":["pages/user/user.vue","pages/user/user.vue?type=page"],"sourcesContent":["<template>\n    <view class=\"container\">\n        <PageHeader title=\"个人信息\" @back=\"back\" />\n        <view class=\"content\">\n            <view class=\"avatar-section\">\n                <view class=\"avatar-container\" @tap=\"handleAvatarClick\">\n                    <image v-if=\"avatarUrl\" class=\"avatar\" :src=\"avatarUrl\" mode=\"aspectFill\" />\n                    <view v-else class=\"avatar avatar-default\">\n                        <text class=\"avatar-text\">{{ userStore.userType == 1 ? userStore.userAvatar :\n                            userStore.userSFAvatar }}</text>\n                    </view>\n                    <!-- <view class=\"avatar-edit-overlay\">\n                        <uni-icons type=\"camera-filled\" size=\"32rpx\" color=\"#fff\"></uni-icons>\n                    </view> -->\n                </view>\n                <!-- <text class=\"change-avatar-text\">更换头像</text> -->\n            </view>\n\n            <view class=\"info-section\">\n                <text class=\"section-title\">基本信息</text>\n\n                <view class=\"info-item\">\n                    <text class=\"label\">昵称</text>\n                    <text class=\"value\">{{ userStore.nickName || '未设置' }}</text>\n                </view>\n\n                <view class=\"info-item\">\n                    <text class=\"label\">用户名</text>\n                    <text class=\"value\">{{ userStore.userName || '未设置' }}</text>\n                </view>\n\n                <view class=\"info-item\">\n                    <text class=\"label\">用户类型</text>\n                    <text class=\"value\">{{ userStore.userTypeText }}</text>\n                </view>\n\n\n            </view>\n        </view>\n\n        <!-- 退出登录按钮 -->\n        <view class=\"footer\">\n            <button class=\"logout-btn\" @tap=\"handleLogout\">退出登录</button>\n        </view>\n    </view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useUserStore } from '@/stores/user.js'\nimport PageHeader from '@/components/PageHeader/PageHeader.vue'\n\n\n// 使用用户 store\nconst userStore = useUserStore()\n\n// 头像URL\nconst avatarUrl = ref('')\nconst filePicker = ref(null)\n\nonMounted(async () => {\n    // 确保有用户信息\n    await userStore.ensureUserInfo()\n})\n\n// 返回上一页\nconst back = () => {\n    uni.navigateBack()\n}\n\n// 点击头像\nconst handleAvatarClick = () => {\n    // 触发文件选择器\n    if (filePicker.value) {\n        filePicker.value.chooseFile()\n    }\n}\n\n// 文件选择回调\nconst onFileSelect = (e) => {\n    console.log('选择文件:', e)\n}\n\n// 上传成功回调\nconst onUploadSuccess = (e) => {\n    console.log('上传成功:', e)\n    if (e.tempFilePaths && e.tempFilePaths.length > 0) {\n        avatarUrl.value = e.tempFilePaths[0]\n    }\n}\n\n// 上传失败回调\nconst onUploadFail = (e) => {\n    console.log('上传失败:', e)\n    uni.showToast({\n        title: '上传失败',\n        icon: 'none'\n    })\n}\n\n// 获取认证状态样式类\nconst getStatusClass = () => {\n    const status = userStore.merchantStatus\n    switch (status) {\n        case 1:\n            return 'status-success'\n        case 0:\n            return 'status-pending'\n        case 2:\n            return 'status-failed'\n        default:\n            return 'status-default'\n    }\n}\n\n// 保存\nconst handleSave = () => {\n    uni.showToast({\n        title: '保存成功',\n        icon: 'success'\n    })\n}\n\n// 退出登录\nconst handleLogout = () => {\n    uni.showModal({\n        title: '确认退出',\n        content: '确定要退出登录吗？',\n        confirmText: '退出',\n        cancelText: '取消',\n        confirmColor: '#ff4444',\n        success: (res) => {\n            if (res.confirm) {\n                // 用户确认退出\n                userStore.logout()\n            }\n        }\n    })\n}\n</script>\n\n<style scoped lang=\"scss\">\n.container {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n\n    .header {\n        flex-shrink: 0;\n        background-color: #ffffff;\n\n        .nav-bar {\n            display: flex;\n            align-items: center;\n            padding: 0 32rpx;\n            height: 88rpx;\n\n            .back-icon {\n                width: 44rpx;\n                height: 44rpx;\n            }\n\n            .title {\n                flex: 1;\n                text-align: center;\n                font-size: 17px;\n                font-weight: 500;\n                color: #333333;\n            }\n\n            .right-icons {\n                display: flex;\n                gap: 20rpx;\n\n                .more-icon,\n                .circle-icon {\n                    width: 44rpx;\n                    height: 44rpx;\n                }\n            }\n        }\n    }\n\n    .content {\n        flex: 1;\n        overflow: auto;\n        padding-bottom: 180rpx;\n        /* 为固定的保存按钮留出空间 */\n\n        .avatar-section {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 40rpx 0;\n            background-color: #ffffff;\n\n            .avatar-container {\n                position: relative;\n                width: 160rpx;\n                height: 160rpx;\n                margin-bottom: 16rpx;\n\n                .avatar {\n                    width: 100%;\n                    height: 100%;\n                    border-radius: 80rpx;\n                }\n\n                .avatar-default {\n                    background-color: rgba(7, 193, 96, 1);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n\n                    .avatar-text {\n                        font-size: 48rpx;\n                        font-weight: 500;\n                        color: #fff;\n                    }\n                }\n\n                .avatar-edit-overlay {\n                    position: absolute;\n                    bottom: 0;\n                    right: 0;\n                    width: 48rpx;\n                    height: 48rpx;\n                    background-color: rgba(0, 0, 0, 0.6);\n                    border-radius: 24rpx;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    border: 4rpx solid #fff;\n                }\n            }\n\n            .change-avatar-text {\n                font-size: 14px;\n                color: #999999;\n            }\n        }\n\n        .info-section {\n            margin-top: 20rpx;\n            background-color: #ffffff;\n            padding: 0 32rpx;\n\n            .section-title {\n                font-size: 14px;\n                color: #333333;\n                padding: 24rpx 0;\n                display: block;\n            }\n\n            .info-item {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                padding: 32rpx 0;\n                border-bottom: 1px solid #f5f5f5;\n\n                &:last-child {\n                    border-bottom: none;\n                }\n\n                .label {\n                    font-size: 16px;\n                    color: #333333;\n                }\n\n                .value-container {\n                    display: flex;\n                    align-items: center;\n                    gap: 8rpx;\n\n                    .value {\n                        font-size: 16px;\n                        color: #666666;\n                    }\n\n                    .arrow-right {\n                        width: 32rpx;\n                        height: 32rpx;\n                    }\n                }\n\n                .value {\n                    font-size: 16px;\n                    color: #666666;\n\n                    &.status-success {\n                        color: #07c160;\n                    }\n\n                    &.status-pending {\n                        color: #ff9500;\n                    }\n\n                    &.status-failed {\n                        color: #ff4444;\n                    }\n\n                    &.status-default {\n                        color: #666666;\n                    }\n                }\n            }\n        }\n    }\n\n    .footer {\n        position: fixed;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        flex-shrink: 0;\n        padding: 40rpx 32rpx 60rpx;\n        background-color: #ffffff;\n        box-shadow: 0 -2rpx 20rpx rgba(0, 0, 0, 0.1);\n        z-index: 999;\n\n        .logout-btn {\n            width: 100%;\n            height: 88rpx;\n            line-height: 88rpx;\n            background: linear-gradient(135deg, #ff4444 0%, #cc3333 100%);\n            color: #ffffff;\n            font-size: 16px;\n            border-radius: 44rpx;\n            box-shadow: 0 8rpx 20rpx rgba(255, 68, 68, 0.3);\n            border: none;\n\n            &::after {\n                border: none;\n            }\n\n            &:active {\n                transform: scale(0.98);\n                transition: transform 0.1s;\n            }\n        }\n    }\n}\n</style>","import MiniProgramPage from '/Users/yx/Documents/Vue3Projects/cycl/pages/user/user.vue'\nwx.createPage(MiniProgramPage)"],"names":["useUserStore","ref","onMounted","uni"],"mappings":";;;;;;AAkDA,MAAM,aAAa,MAAW;;;;AAI9B,UAAM,YAAYA,YAAAA,aAAc;AAGhC,UAAM,YAAYC,cAAG,IAAC,EAAE;AACxB,UAAM,aAAaA,cAAG,IAAC,IAAI;AAE3BC,kBAAAA,UAAU,YAAY;AAElB,YAAM,UAAU,eAAgB;AAAA,IACpC,CAAC;AAGD,UAAM,OAAO,MAAM;AACfC,oBAAAA,MAAI,aAAc;AAAA,IACtB;AAGA,UAAM,oBAAoB,MAAM;AAE5B,UAAI,WAAW,OAAO;AAClB,mBAAW,MAAM,WAAY;AAAA,MAChC;AAAA,IACL;AAgDA,UAAM,eAAe,MAAM;AACvBA,oBAAAA,MAAI,UAAU;AAAA,QACV,OAAO;AAAA,QACP,SAAS;AAAA,QACT,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,SAAS,CAAC,QAAQ;AACd,cAAI,IAAI,SAAS;AAEb,sBAAU,OAAQ;AAAA,UACrB;AAAA,QACJ;AAAA,MACT,CAAK;AAAA,IACL;;;;;;;;;;;;;;;;;;;;;;;ACzIA,GAAG,WAAW,eAAe;"}