{"version":3,"file":"syContractFromAuth.js","sources":["pages/syContract/syContractFromAuth.vue","pages/syContract/syContractFromAuth.vue?type=page"],"sourcesContent":["<!-- 从认证页面进入的合同页面 -->\n<template>\n    <view class=\"contract-container\">\n        <!-- 导航栏 -->\n        <PageHeader title=\"电子合同\" @back=\"back\" />\n        <!-- 合同内容区域 -->\n        <scroll-view class=\"contract-content\" scroll-y>\n            <!-- 富文本合同内容 -->\n            <view class=\"contract-body\">\n                <mp-html :content=\"contractContent\" @tap=\"onRichTextTap\"></mp-html>\n                <!-- 可编辑模式下的点击区域 -->\n                <view v-if=\"!isReadOnly\" class=\"click-overlay\" @tap=\"onRichTextTap\">\n                    <view class=\"click-hint\">点击此处修改签名</view>\n                </view>\n            </view>\n        </scroll-view>\n    </view>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { onLoad } from '@dcloudio/uni-app'\nimport { apiGetMerchantCovenant, apiGetCovenantTemplat } from '@/api/apis.js'\nimport { useUserStore } from '@/stores/user.js'\nimport PageHeader from '@/components/PageHeader/PageHeader.vue'\n\n// 页面参数\nconst tempId = ref('') // 合同模板ID\nconst contractData = ref({})\nconst hasContract = ref(false) // 是否有已存在的合同\nconst existingContent = ref('') // 已存在的合同内容\nconst existingStartTime = ref('') // 已存在的开始时间\nconst existingEndTime = ref('') // 已存在的结束时间\nconst isReadOnly = ref(false) // 是否只读模式\n\n// 用户信息\nconst userStore = useUserStore()\n\n// 签名数据\nconst signatures = ref({\n    partyB: ''  // 乙方签名\n})\n\n// 富文本合同内容（HTML格式）\nconst contractContent = ref('')\n\n// HTML实体转码函数\nconst decodeHtmlEntities = (str) => {\n    if (!str) return ''\n    return str.replace(/&amp;/g, '&')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\")\n}\n\n// 页面加载\nonLoad((options) => {\n    tempId.value = options.tempId || '' // 接收合同模板ID\n    hasContract.value = options.hasContract === 'true' // 是否有已存在的合同\n    existingContent.value = options.content ? decodeURIComponent(options.content) : '' // 已存在的合同内容\n    existingStartTime.value = options.startTime || '' // 已存在的开始时间\n    existingEndTime.value = options.endTime || '' // 已存在的结束时间\n    isReadOnly.value = options.isReadOnly === 'true' // 是否只读模式\n\n\n    // 如果有已存在的合同，直接显示；否则先尝试获取商户合同，没有则获取模板\n    if (hasContract.value && existingContent.value) {\n        loadExistingContract()\n    } else {\n        loadContractForAuth()\n    }\n    loadSignatures()\n})\n\n// 加载已存在的合同内容\nconst loadExistingContract = () => {\n    console.log('===== 加载已存在的合同内容 =====')\n    contractContent.value = decodeHtmlEntities(existingContent.value)\n\n    // 设置合同数据\n    contractData.value = {\n        content: existingContent.value,\n        createTime: existingStartTime.value,\n        endTime: existingEndTime.value,\n        id: '' // ID暂时为空\n    }\n\n    console.log('已存在合同内容加载完成:', contractContent.value)\n}\n\n\n// 从认证页面进入的合同加载逻辑\nconst loadContractForAuth = async () => {\n    try {\n        // 先尝试获取商户合同\n        const merchantResult = await apiGetMerchantCovenant({\n            merchantId: userStore.merchant?.id\n        })\n\n        if (merchantResult.code === 200 && merchantResult.data && merchantResult.data.content) {\n            // 有商户合同，直接显示\n            console.log('找到商户合同，直接显示')\n            contractContent.value = decodeHtmlEntities(merchantResult.data.content)\n            contractData.value = merchantResult.data\n        } else {\n            // 没有商户合同，获取模板进入编辑模式\n            console.log('未找到商户合同，获取模板进入编辑模式')\n            await loadCovenantTemplate()\n        }\n    } catch (error) {\n        console.error('加载商户合同失败，尝试获取模板:', error)\n        // 出错时也尝试获取模板\n        await loadCovenantTemplate()\n    }\n}\n\n// 加载合同模板（可编辑模式）\nconst loadCovenantTemplate = async () => {\n    try {\n        const result = await apiGetCovenantTemplat()\n\n        if (result.code === 200 && result.data && result.data.content) {\n            contractContent.value = decodeHtmlEntities(result.data.content)\n            contractData.value = result.data\n        } else {\n            contractContent.value = '<div style=\"text-align: center; padding: 40px; color: #999;\">暂无合同模板</div>'\n        }\n    } catch (error) {\n        console.error('加载合同模板失败:', error)\n        contractContent.value = '<div style=\"text-align: center; padding: 40px; color: #999;\">加载合同模板失败</div>'\n    }\n}\n\n// 获取当前日期\nconst getCurrentDate = () => {\n    const currentDate = new Date()\n    const year = currentDate.getFullYear()\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0')\n    const day = String(currentDate.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n}\n\n// 加载签名数据\nconst loadSignatures = () => {\n    // 初始化签名数据\n    signatures.value = {\n        partyB: ''\n    }\n}\n\n// 更新合同内容中的签名显示\nconst updateContractWithSignature = () => {\n    console.log('===== 开始更新合同签名 =====')\n    console.log('当前签名数据:', signatures.value)\n    console.log('当前合同内容:', contractContent.value)\n\n    if (signatures.value.partyB) {\n        const signatureHtml = `<img src=\"${signatures.value.partyB}\" style=\"max-width: 270px; max-height: 80px; vertical-align: middle; cursor: pointer;\" alt=\"乙方签名\" />`\n\n        // 替换签名按钮或已存在的签名图片\n        contractContent.value = contractContent.value.replace(\n            /<span id=\"signature-btn\"[^>]*>点击此处签名<\\/span>/g,\n            signatureHtml\n        )\n\n        // 如果已经有签名图片，替换它\n        contractContent.value = contractContent.value.replace(\n            /<img[^>]*alt=\"乙方签名\"[^>]*>/g,\n            signatureHtml\n        )\n\n        // 签名后自动回填开始日期\n        const currentDate = getCurrentDate()\n        contractContent.value = contractContent.value.replace(\n            /<span id=\"start-date\">[^<]*<\\/span>/g,\n            `<span id=\"start-date\">${currentDate}</span>`\n        )\n\n        // 同时更新 contractData 中的时间\n        contractData.value.createTime = currentDate\n\n        console.log('更新后的合同内容:', contractContent.value)\n        console.log('===== 合同签名更新完成 =====')\n    }\n}\n\n// 富文本点击事件\nconst onRichTextTap = (e) => {\n    console.log('富文本点击事件触发:', e)\n    console.log('isReadOnly:', isReadOnly.value)\n\n    if (isReadOnly.value) {\n        // 只读模式，不跳转签名\n        console.log('只读模式，不跳转签名')\n        return\n    }\n\n    // 可编辑模式，跳转签名\n    console.log('可编辑模式，跳转签名')\n    goToSignature()\n}\n\n// 跳转到签名页面\nconst goToSignature = () => {\n    uni.navigateTo({\n        url: `/pages/syContract/shSignature`\n    })\n}\n\n// 返回上一页\nconst back = () => {\n    // 如果没有签名，直接返回\n    if (!signatures.value.partyB) {\n        uni.navigateBack()\n        return\n    }\n    // 已签名，先准备返回数据，再返回\n    prepareReturnData()\n}\n\n// 页面显示时刷新签名图片\nonMounted(() => {\n    // 监听页面显示事件，刷新签名图片\n    uni.$on('signatureUpdated', (signatureData) => {\n        console.log('===== 收到签名更新事件 =====')\n        console.log('签名数据:', signatureData)\n        signatures.value = signatureData\n        updateContractWithSignature()\n    })\n})\n\n// 准备返回给上级页面的数据\nconst prepareReturnData = () => {\n\n    // 获取当前日期作为开始日期（回显的开始日期）\n    const currentDate = new Date()\n    const year = currentDate.getFullYear()\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0')\n    const day = String(currentDate.getDate()).padStart(2, '0')\n    const createTime = `${year}-${month}-${day}`\n\n    // 准备返回的4个值\n    const returnData = {\n        content: contractContent.value, // 修改后的富文本内容\n        createTime: createTime, // 回显的开始日期\n        endTime: contractData.value.endTime, // 从result.data获取的结束日期\n        id: contractData.value.id // 从result.data获取的合同ID\n    }\n\n    // 通过事件传递数据给上级页面\n\n    uni.$emit('contractUpdated', returnData);\n    uni.navigateBack()\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.contract-container {\n    min-height: 100vh;\n    background-color: #f5f5f5;\n}\n\n.contract-content {\n    min-height: calc(100vh - 200rpx);\n    padding: 20rpx;\n    padding-bottom: 140rpx;\n    box-sizing: border-box;\n}\n\n\n.contract-body {\n    background: #fff;\n    padding: 30rpx;\n    border-radius: 16rpx;\n    margin-bottom: 20rpx;\n    min-height: 800rpx;\n}\n\n.bottom-actions {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: #fff;\n    padding: 20rpx 30rpx;\n    padding-bottom: calc(20rpx + env(safe-area-inset-bottom));\n    border-top: 1rpx solid #eee;\n    z-index: 100;\n\n\n}\n\n// 富文本样式调整\n:deep(.rich-text) {\n    font-size: 28rpx;\n    line-height: 1.6;\n    color: #333;\n}\n\n// 点击覆盖层样式\n.click-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: transparent;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 10;\n\n    .click-hint {\n        background: rgba(0, 0, 0, 0.6);\n        color: white;\n        padding: 20rpx 40rpx;\n        border-radius: 10rpx;\n        font-size: 28rpx;\n        opacity: 0;\n        transition: opacity 0.3s;\n    }\n\n    &:active .click-hint {\n        opacity: 1;\n    }\n}\n\n.contract-body {\n    position: relative;\n}\n</style>\n","import MiniProgramPage from '/Users/yx/Documents/Vue3Projects/cycl/pages/syContract/syContractFromAuth.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","useUserStore","onLoad","uni","apiGetMerchantCovenant","apiGetCovenantTemplat","onMounted"],"mappings":";;;;;;;;;;;;AAwBA,MAAM,aAAa,MAAW;;;;AAG9B,UAAM,SAASA,cAAG,IAAC,EAAE;AACrB,UAAM,eAAeA,cAAG,IAAC,EAAE;AAC3B,UAAM,cAAcA,cAAG,IAAC,KAAK;AAC7B,UAAM,kBAAkBA,cAAG,IAAC,EAAE;AAC9B,UAAM,oBAAoBA,cAAG,IAAC,EAAE;AAChC,UAAM,kBAAkBA,cAAG,IAAC,EAAE;AAC9B,UAAM,aAAaA,cAAG,IAAC,KAAK;AAG5B,UAAM,YAAYC,YAAAA,aAAc;AAGhC,UAAM,aAAaD,cAAAA,IAAI;AAAA,MACnB,QAAQ;AAAA;AAAA,IACZ,CAAC;AAGD,UAAM,kBAAkBA,cAAG,IAAC,EAAE;AAG9B,UAAM,qBAAqB,CAAC,QAAQ;AAChC,UAAI,CAAC;AAAK,eAAO;AACjB,aAAO,IAAI,QAAQ,UAAU,GAAG,EAC3B,QAAQ,SAAS,GAAG,EACpB,QAAQ,SAAS,GAAG,EACpB,QAAQ,WAAW,GAAG,EACtB,QAAQ,UAAU,GAAG;AAAA,IAC9B;AAGAE,kBAAM,OAAC,CAAC,YAAY;AAChB,aAAO,QAAQ,QAAQ,UAAU;AACjC,kBAAY,QAAQ,QAAQ,gBAAgB;AAC5C,sBAAgB,QAAQ,QAAQ,UAAU,mBAAmB,QAAQ,OAAO,IAAI;AAChF,wBAAkB,QAAQ,QAAQ,aAAa;AAC/C,sBAAgB,QAAQ,QAAQ,WAAW;AAC3C,iBAAW,QAAQ,QAAQ,eAAe;AAI1C,UAAI,YAAY,SAAS,gBAAgB,OAAO;AAC5C,6BAAsB;AAAA,MAC9B,OAAW;AACH,4BAAqB;AAAA,MACxB;AACD,qBAAgB;AAAA,IACpB,CAAC;AAGD,UAAM,uBAAuB,MAAM;AAC/BC,oBAAAA,MAAA,MAAA,OAAA,iDAAY,wBAAwB;AACpC,sBAAgB,QAAQ,mBAAmB,gBAAgB,KAAK;AAGhE,mBAAa,QAAQ;AAAA,QACjB,SAAS,gBAAgB;AAAA,QACzB,YAAY,kBAAkB;AAAA,QAC9B,SAAS,gBAAgB;AAAA,QACzB,IAAI;AAAA;AAAA,MACP;AAEDA,wFAAY,gBAAgB,gBAAgB,KAAK;AAAA,IACrD;AAIA,UAAM,sBAAsB,YAAY;;AACpC,UAAI;AAEA,cAAM,iBAAiB,MAAMC,gCAAuB;AAAA,UAChD,aAAY,eAAU,aAAV,mBAAoB;AAAA,QAC5C,CAAS;AAED,YAAI,eAAe,SAAS,OAAO,eAAe,QAAQ,eAAe,KAAK,SAAS;AAEnFD,wBAAAA,MAAA,MAAA,OAAA,kDAAY,aAAa;AACzB,0BAAgB,QAAQ,mBAAmB,eAAe,KAAK,OAAO;AACtE,uBAAa,QAAQ,eAAe;AAAA,QAChD,OAAe;AAEHA,wBAAAA,MAAY,MAAA,OAAA,kDAAA,oBAAoB;AAChC,gBAAM,qBAAsB;AAAA,QAC/B;AAAA,MACJ,SAAQ,OAAO;AACZA,sBAAAA,MAAc,MAAA,SAAA,kDAAA,oBAAoB,KAAK;AAEvC,cAAM,qBAAsB;AAAA,MAC/B;AAAA,IACL;AAGA,UAAM,uBAAuB,YAAY;AACrC,UAAI;AACA,cAAM,SAAS,MAAME,+BAAuB;AAE5C,YAAI,OAAO,SAAS,OAAO,OAAO,QAAQ,OAAO,KAAK,SAAS;AAC3D,0BAAgB,QAAQ,mBAAmB,OAAO,KAAK,OAAO;AAC9D,uBAAa,QAAQ,OAAO;AAAA,QACxC,OAAe;AACH,0BAAgB,QAAQ;AAAA,QAC3B;AAAA,MACJ,SAAQ,OAAO;AACZF,sBAAAA,MAAc,MAAA,SAAA,kDAAA,aAAa,KAAK;AAChC,wBAAgB,QAAQ;AAAA,MAC3B;AAAA,IACL;AAGA,UAAM,iBAAiB,MAAM;AACzB,YAAM,cAAc,oBAAI,KAAM;AAC9B,YAAM,OAAO,YAAY,YAAa;AACtC,YAAM,QAAQ,OAAO,YAAY,SAAQ,IAAK,CAAC,EAAE,SAAS,GAAG,GAAG;AAChE,YAAM,MAAM,OAAO,YAAY,QAAS,CAAA,EAAE,SAAS,GAAG,GAAG;AACzD,aAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG;AAAA,IAClC;AAGA,UAAM,iBAAiB,MAAM;AAEzB,iBAAW,QAAQ;AAAA,QACf,QAAQ;AAAA,MACX;AAAA,IACL;AAGA,UAAM,8BAA8B,MAAM;AACtCA,oBAAAA,MAAY,MAAA,OAAA,kDAAA,sBAAsB;AAClCA,oBAAA,MAAA,MAAA,OAAA,kDAAY,WAAW,WAAW,KAAK;AACvCA,oBAAY,MAAA,MAAA,OAAA,kDAAA,WAAW,gBAAgB,KAAK;AAE5C,UAAI,WAAW,MAAM,QAAQ;AACzB,cAAM,gBAAgB,aAAa,WAAW,MAAM,MAAM;AAG1D,wBAAgB,QAAQ,gBAAgB,MAAM;AAAA,UAC1C;AAAA,UACA;AAAA,QACH;AAGD,wBAAgB,QAAQ,gBAAgB,MAAM;AAAA,UAC1C;AAAA,UACA;AAAA,QACH;AAGD,cAAM,cAAc,eAAgB;AACpC,wBAAgB,QAAQ,gBAAgB,MAAM;AAAA,UAC1C;AAAA,UACA,yBAAyB,WAAW;AAAA,QACvC;AAGD,qBAAa,MAAM,aAAa;AAEhCA,sBAAY,MAAA,MAAA,OAAA,kDAAA,aAAa,gBAAgB,KAAK;AAC9CA,sBAAAA,MAAA,MAAA,OAAA,kDAAY,sBAAsB;AAAA,MACrC;AAAA,IACL;AAGA,UAAM,gBAAgB,CAAC,MAAM;AACzBA,oBAAAA,qEAAY,cAAc,CAAC;AAC3BA,oBAAA,MAAA,MAAA,OAAA,kDAAY,eAAe,WAAW,KAAK;AAE3C,UAAI,WAAW,OAAO;AAElBA,sBAAAA,qEAAY,YAAY;AACxB;AAAA,MACH;AAGDA,oBAAAA,MAAY,MAAA,OAAA,kDAAA,YAAY;AACxB,oBAAe;AAAA,IACnB;AAGA,UAAM,gBAAgB,MAAM;AACxBA,oBAAAA,MAAI,WAAW;AAAA,QACX,KAAK;AAAA,MACb,CAAK;AAAA,IACL;AAGA,UAAM,OAAO,MAAM;AAEf,UAAI,CAAC,WAAW,MAAM,QAAQ;AAC1BA,sBAAAA,MAAI,aAAc;AAClB;AAAA,MACH;AAED,wBAAmB;AAAA,IACvB;AAGAG,kBAAAA,UAAU,MAAM;AAEZH,oBAAAA,MAAI,IAAI,oBAAoB,CAAC,kBAAkB;AAC3CA,sBAAAA,MAAA,MAAA,OAAA,kDAAY,sBAAsB;AAClCA,sBAAAA,MAAA,MAAA,OAAA,kDAAY,SAAS,aAAa;AAClC,mBAAW,QAAQ;AACnB,oCAA6B;AAAA,MACrC,CAAK;AAAA,IACL,CAAC;AAGD,UAAM,oBAAoB,MAAM;AAG5B,YAAM,cAAc,oBAAI,KAAM;AAC9B,YAAM,OAAO,YAAY,YAAa;AACtC,YAAM,QAAQ,OAAO,YAAY,SAAQ,IAAK,CAAC,EAAE,SAAS,GAAG,GAAG;AAChE,YAAM,MAAM,OAAO,YAAY,QAAS,CAAA,EAAE,SAAS,GAAG,GAAG;AACzD,YAAM,aAAa,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG;AAG1C,YAAM,aAAa;AAAA,QACf,SAAS,gBAAgB;AAAA;AAAA,QACzB;AAAA;AAAA,QACA,SAAS,aAAa,MAAM;AAAA;AAAA,QAC5B,IAAI,aAAa,MAAM;AAAA;AAAA,MAC1B;AAIDA,oBAAAA,MAAI,MAAM,mBAAmB,UAAU;AACvCA,oBAAAA,MAAI,aAAc;AAAA,IACtB;;;;;;;;;;;;;;;;;;;AC7PA,GAAG,WAAW,eAAe;"}