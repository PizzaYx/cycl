{"version":3,"file":"TimeRangePicker.js","sources":["components/TimeRangePicker/TimeRangePicker.vue","/Users/yx/Documents/Vue3Projects/cycl/components/TimeRangePicker/TimeRangePicker.vue?type=component"],"sourcesContent":["<!-- \n  时间范围选择器组件\n  功能：带清除按钮的时间范围选择器\n  使用场景：需要时间筛选的页面\n-->\n<template>\n    <view class=\"time-range-picker\">\n        <!-- 时间选择器 -->\n        <view class=\"filter-item\">\n            <uni-datetime-picker v-model=\"selectedTimeRange\" ref=\"datetimePicker\" type=\"datetimerange\"\n                rangeSeparator=\"至\" start=\"2020-01-01 00:00:00\" :end=\"getCurrentDateTime()\" @change=\"onTimeChange\"\n                @show=\"onTimePickerShow\" @maskClick=\"onTimePickerClose\">\n                <text>时间 </text>\n                <uni-icons type=\"bottom\" size=\"12\" color=\"#666\"></uni-icons>\n            </uni-datetime-picker>\n        </view>\n\n        <!-- 清除按钮 - 覆盖在弹出层上 -->\n        <view v-if=\"showClearButton\" class=\"clear-button-overlay\" @click=\"clearTimeRange\">\n            <view class=\"clear-button\">\n                <text>清除</text>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\n\n// ==================== Props 定义 ====================\n// 父组件传入的初始值\nconst props = defineProps({\n    // 初始选中的时间范围，格式：['2023-01-01', '2023-01-31']\n    modelValue: {\n        type: Array,\n        default: () => []\n    }\n})\n\n// ==================== Emits 定义 ====================\n// 向父组件发送的事件\nconst emit = defineEmits([\n    'update:modelValue', // 时间范围变化时触发，用于 v-model 双向绑定\n    'change'             // 时间范围变化时触发，传递新的时间范围\n])\n\n// ==================== 响应式数据 ====================\n// 内部维护的时间范围值\nconst selectedTimeRange = ref([])\n// 是否显示清除按钮\nconst showClearButton = ref(false)\n// 时间选择器组件的引用\nconst datetimePicker = ref(null)\n\n// ==================== 监听器 ====================\n// 监听父组件传入的值变化，同步到内部状态\nwatch(() => props.modelValue, (newValue) => {\n    selectedTimeRange.value = newValue || []\n}, { immediate: true })\n\n// 监听内部值变化，通知父组件\nwatch(selectedTimeRange, (newValue) => {\n    emit('update:modelValue', newValue)\n    emit('change', newValue)\n})\n\n// ==================== 方法定义 ====================\n\n/**\n * 获取当前日期时间\n * @returns {string} 格式化的当前日期时间字符串\n */\nconst getCurrentDateTime = () => {\n    const now = new Date()\n    const year = now.getFullYear()\n    const month = String(now.getMonth() + 1).padStart(2, '0')\n    const day = String(now.getDate()).padStart(2, '0')\n    const hour = String(now.getHours()).padStart(2, '0')\n    const minute = String(now.getMinutes()).padStart(2, '0')\n    const second = String(now.getSeconds()).padStart(2, '0')\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`\n}\n\n/**\n * 时间选择器显示时触发\n * 延迟显示清除按钮，确保弹窗完全显示后再显示\n */\nconst onTimePickerShow = () => {\n    console.log('时间选择器已打开')\n    // 延迟显示清除按钮，确保弹窗完全显示后再显示\n    setTimeout(() => {\n        showClearButton.value = true\n    }, 350)\n}\n\n/**\n * 时间选择器关闭时触发\n * 隐藏清除按钮\n */\nconst onTimePickerClose = () => {\n    console.log('时间选择器已关闭')\n    showClearButton.value = false\n}\n\n/**\n * 时间范围变化时触发\n * @param {Array} value 新的时间范围\n */\nconst onTimeChange = (value) => {\n    console.log('时间变化:', value)\n    selectedTimeRange.value = value\n    // 隐藏清除按钮（用户选择了时间，弹窗会关闭）\n    showClearButton.value = false\n}\n\n/**\n * 清除时间范围\n * 使用组件的 clear 方法清除选择并关闭弹窗\n */\nconst clearTimeRange = () => {\n    console.log('清除时间范围')\n    // 使用组件的 clear 方法\n    if (datetimePicker.value) {\n        datetimePicker.value.clear()\n        // 关闭弹窗\n        datetimePicker.value.close()\n    }\n    // 清空数据\n    selectedTimeRange.value = []\n    // 隐藏清除按钮\n    showClearButton.value = false\n}\n\n// ==================== 暴露给父组件的方法 ====================\n// 父组件可以通过 ref 调用这些方法\ndefineExpose({\n    clear: clearTimeRange,        // 清除方法\n    show: () => datetimePicker.value?.show(),  // 显示方法\n    close: () => datetimePicker.value?.close() // 关闭方法\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.time-range-picker {\n    position: relative;\n\n    .filter-item {\n        display: flex;\n        align-items: center;\n        gap: 10rpx; // 文字和箭头紧挨着\n        min-height: 60rpx;\n\n        text {\n            font-size: 28rpx;\n            color: #333;\n        }\n    }\n\n    // 清除按钮覆盖层\n    .clear-button-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: 9999;\n        pointer-events: none; // 让点击穿透到下层\n\n        .clear-button {\n            position: absolute;\n            top: 740rpx;\n            left: 30rpx;\n            transform: translateY(-50%);\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 15rpx 30rpx;\n            background-color: #007aff;\n            border-radius: 50rpx;\n            pointer-events: auto; // 恢复按钮的点击事件\n\n            text {\n                font-size: 28rpx;\n                color: #fff;\n            }\n\n            &:active {\n                background-color: #0056cc;\n            }\n        }\n    }\n}\n</style>\n","import Component from '/Users/yx/Documents/Vue3Projects/cycl/components/TimeRangePicker/TimeRangePicker.vue'\nwx.createComponent(Component)"],"names":["ref","watch","uni"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,UAAM,QAAQ;AAUd,UAAM,OAAO;AAOb,UAAM,oBAAoBA,cAAG,IAAC,EAAE;AAEhC,UAAM,kBAAkBA,cAAG,IAAC,KAAK;AAEjC,UAAM,iBAAiBA,cAAG,IAAC,IAAI;AAI/BC,kBAAK,MAAC,MAAM,MAAM,YAAY,CAAC,aAAa;AACxC,wBAAkB,QAAQ,YAAY,CAAE;AAAA,IAC5C,GAAG,EAAE,WAAW,MAAM;AAGtBA,kBAAAA,MAAM,mBAAmB,CAAC,aAAa;AACnC,WAAK,qBAAqB,QAAQ;AAClC,WAAK,UAAU,QAAQ;AAAA,IAC3B,CAAC;AAQD,UAAM,qBAAqB,MAAM;AAC7B,YAAM,MAAM,oBAAI,KAAM;AACtB,YAAM,OAAO,IAAI,YAAa;AAC9B,YAAM,QAAQ,OAAO,IAAI,SAAQ,IAAK,CAAC,EAAE,SAAS,GAAG,GAAG;AACxD,YAAM,MAAM,OAAO,IAAI,QAAS,CAAA,EAAE,SAAS,GAAG,GAAG;AACjD,YAAM,OAAO,OAAO,IAAI,SAAU,CAAA,EAAE,SAAS,GAAG,GAAG;AACnD,YAAM,SAAS,OAAO,IAAI,WAAY,CAAA,EAAE,SAAS,GAAG,GAAG;AACvD,YAAM,SAAS,OAAO,IAAI,WAAY,CAAA,EAAE,SAAS,GAAG,GAAG;AACvD,aAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,MAAM,IAAI,MAAM;AAAA,IAC9D;AAMA,UAAM,mBAAmB,MAAM;AAC3BC,oBAAAA,MAAA,MAAA,OAAA,wDAAY,UAAU;AAEtB,iBAAW,MAAM;AACb,wBAAgB,QAAQ;AAAA,MAC3B,GAAE,GAAG;AAAA,IACV;AAMA,UAAM,oBAAoB,MAAM;AAC5BA,oBAAAA,MAAA,MAAA,OAAA,yDAAY,UAAU;AACtB,sBAAgB,QAAQ;AAAA,IAC5B;AAMA,UAAM,eAAe,CAAC,UAAU;AAC5BA,oBAAAA,4EAAY,SAAS,KAAK;AAC1B,wBAAkB,QAAQ;AAE1B,sBAAgB,QAAQ;AAAA,IAC5B;AAMA,UAAM,iBAAiB,MAAM;AACzBA,oBAAAA,MAAA,MAAA,OAAA,yDAAY,QAAQ;AAEpB,UAAI,eAAe,OAAO;AACtB,uBAAe,MAAM,MAAO;AAE5B,uBAAe,MAAM,MAAO;AAAA,MAC/B;AAED,wBAAkB,QAAQ,CAAE;AAE5B,sBAAgB,QAAQ;AAAA,IAC5B;AAIA,aAAa;AAAA,MACT,OAAO;AAAA;AAAA,MACP,MAAM,MAAM;;AAAA,oCAAe,UAAf,mBAAsB;AAAA;AAAA;AAAA,MAClC,OAAO,MAAM;;AAAA,oCAAe,UAAf,mBAAsB;AAAA;AAAA;AAAA,IACvC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1ID,GAAG,gBAAgB,SAAS;"}