{"version":3,"file":"InfoDisplay.js","sources":["components/InfoDisplay/InfoDisplay.vue","/Users/yx/Documents/Vue3Projects/cycl/components/InfoDisplay/InfoDisplay.vue?type=component"],"sourcesContent":["<!-- 信息展示组件 -->\n<template>\n    <view class=\"info-content\" :class=\"{\n        'no-top-border': !showTopBorder,\n        'no-bottom-border': !showBottomBorder\n    }\">\n        <view v-for=\"field in fields\" :key=\"field.key\" class=\"info-item\"\n            :class=\"{ 'address-item': field.key === 'address' && enableAddressNavigation }\"\n            @tap=\"field.key === 'address' && enableAddressNavigation ? handleAddressClick(field) : null\">\n            <text class=\"label\">{{ field.label }}:</text>\n            <view class=\"value-container\">\n                <text class=\"value\">{{ getFieldValue(field) }}</text>\n                <uni-icons v-if=\"field.key === 'address' && enableAddressNavigation\" type=\"location-filled\" size=\"16\"\n                    color=\"#07C160\" class=\"location-icon\"></uni-icons>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script>\n/**\n * 信息展示组件\n * \n * 功能说明：\n * - 统一展示订单相关信息字段\n * - 自动格式化重量和数量字段\n * - 提供统一的样式和布局\n * - 支持动态控制边框显示\n * - 支持地址导航功能（可选）\n * \n * 使用场景：\n * - 收运端首页订单信息展示\n * - 收运记录页面订单信息展示\n * - 收运统计页面订单信息展示\n * - 商户端详情页面信息展示\n * \n * 字段格式化规则：\n * - weight/estimateWeight: 使用formatWeight格式化，显示为\"X.Xkg\"\n * - bucketNum/estimateBucketNum/deliveryCount: 使用formatNum格式化，显示为\"X个\"\n * - 其他字段: 显示原值或\"暂无\"\n * \n * 边框控制：\n * - showTopBorder: true (默认) - 显示上边框\n * - showTopBorder: false - 不显示上边框\n * - showBottomBorder: true (默认) - 显示下边框\n * - showBottomBorder: false - 不显示下边框\n * \n * 地址导航功能：\n * - enableAddressNavigation: true - 启用地址导航功能\n * - enableAddressNavigation: false (默认) - 不启用地址导航功能\n * \n * @author 系统\n * @version 1.3.0\n */\n\nimport { formatWeight, formatNum } from '@/utils/orderUtils'\n\nexport default {\n    name: 'InfoDisplay',\n    props: {\n        /**\n         * 字段配置数组\n         * @type {Array}\n         * @description 每个字段对象包含key、label、value属性\n         * @required true\n         * @example\n         * [\n         *   { key: 'appointmentTime', label: '预估时间', value: '2024-01-01 10:00' },\n         *   { key: 'estimateWeight', label: '预估重量', value: 12.5 }\n         * ]\n         */\n        fields: {\n            type: Array,\n            required: true\n        },\n        /**\n         * 是否显示上边框\n         * @type {Boolean}\n         * @description 控制组件上边框的显示，默认为true\n         * @default true\n         */\n        showTopBorder: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * 是否显示下边框\n         * @type {Boolean}\n         * @description 控制组件下边框的显示，默认为true\n         * @default true\n         */\n        showBottomBorder: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * 是否启用地址导航功能\n         * @type {Boolean}\n         * @description 控制地址字段是否显示定位图标和点击导航功能，默认为false\n         * @default false\n         */\n        enableAddressNavigation: {\n            type: Boolean,\n            default: false\n        }\n    },\n    methods: {\n        /**\n         * 获取字段显示值\n         * 根据字段类型进行相应的格式化处理\n         * \n         * @param {Object} field - 字段对象\n         * @param {String} field.key - 字段标识\n         * @param {*} field.value - 字段值\n         * @returns {String} 格式化后的显示值\n         */\n        getFieldValue(field) {\n            // 根据字段key判断处理方式\n            if (field.key === 'weight' || field.key === 'estimateWeight') {\n                return formatWeight(field.value)\n            } else if (field.key === 'bucketNum' || field.key === 'estimateBucketNum' || field.key === 'deliveryCount') {\n                return formatNum(field.value)\n            } else {\n                // 其他字段显示\"暂无\"\n                return field.value || '暂无'\n            }\n        },\n        /**\n         * 处理地址点击事件\n         * 显示导航选择弹窗\n         * \n         * @param {Object} field - 地址字段对象\n         */\n        handleAddressClick(field) {\n            if (field.key === 'address' && this.enableAddressNavigation) {\n                // 获取完整的任务数据，包含经纬度信息\n                const taskData = this.getTaskDataFromField(field)\n                this.showNavigationActionSheet(field.value, taskData)\n            }\n        },\n        /**\n         * 从字段中获取任务数据\n         * 这里需要从父组件传递完整的任务数据\n         * \n         * @param {Object} field - 字段对象\n         * @returns {Object} 任务数据\n         */\n        getTaskDataFromField(field) {\n            // 如果字段有 taskData 属性，直接返回\n            if (field.taskData) {\n                return field.taskData\n            }\n            // 否则返回空对象，后续可以通过其他方式获取\n            return {}\n        },\n        /**\n         * 显示导航选择操作表\n         * \n         * @param {String} address - 地址\n         * @param {Object} taskData - 任务数据，包含经纬度信息\n         */\n        showNavigationActionSheet(address, taskData = {}) {\n            // 统一使用 wx.openLocation API 打开地图导航\n            this.openLocation(address, taskData)\n        },\n        /**\n         * 打开地图导航（统一使用 wx.openLocation）\n         * \n         * @param {String} address - 地址\n         * @param {Object} taskData - 任务数据，包含经纬度信息\n         */\n        openLocation(address, taskData = {}) {\n            console.log('打开地图导航，地址:', address, '任务数据:', taskData)\n\n            // 检查是否有经纬度信息\n            if (taskData.lat && taskData.lon) {\n                const lat = parseFloat(taskData.lat)\n                const lon = parseFloat(taskData.lon)\n                console.log('使用经纬度导航:', lat, lon)\n\n                // 使用 wx.openLocation 打开地图\n                wx.openLocation({\n                    latitude: lat,\n                    longitude: lon,\n                    name: taskData.merchantName || '目标位置',\n                    address: address,\n                    scale: 18\n                })\n            } else {\n                console.log('没有经纬度信息，无法导航')\n                uni.showToast({\n                    title: '地址信息不完整，无法导航',\n                    icon: 'none',\n                    duration: 2000\n                })\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.info-content {\n    padding: 20rpx 0;\n    border-top: 1px solid #f0f0f0;\n    border-bottom: 1px solid #f0f0f0;\n\n    // 无上边框样式\n    &.no-top-border {\n        border-top: none;\n    }\n\n    // 无下边框样式\n    &.no-bottom-border {\n        border-bottom: none;\n    }\n\n    .info-item {\n        display: flex;\n        align-items: center;\n        margin-bottom: 16rpx;\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n\n        .label {\n            font-size: 26rpx;\n            color: rgba(61, 61, 61, 0.50);\n            width: 180rpx;\n            flex-shrink: 0;\n            line-height: 1.2;\n        }\n\n        .value-container {\n            display: flex;\n            align-items: center;\n            flex: 1;\n        }\n\n        .value {\n            font-size: 26rpx;\n            color: rgba(61, 61, 61, 1);\n            flex-shrink: 0;\n            line-height: 1.2;\n        }\n\n        .location-icon {\n            margin-left: 6rpx;\n            flex-shrink: 0;\n        }\n\n        &.address-item {\n            cursor: pointer;\n            -webkit-tap-highlight-color: transparent;\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n\n            &:active {\n                background-color: transparent !important;\n                -webkit-tap-highlight-color: transparent !important;\n            }\n        }\n    }\n}\n</style>","import Component from '/Users/yx/Documents/Vue3Projects/cycl/components/InfoDisplay/InfoDisplay.vue'\nwx.createComponent(Component)"],"names":["formatWeight","formatNum","uni","wx"],"mappings":";;;AAyDA,MAAK,YAAU;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAYH,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,eAAe;AAAA,MACX,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,kBAAkB;AAAA,MACd,MAAM;AAAA,MACN,SAAS;AAAA,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,yBAAyB;AAAA,MACrB,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACH;AAAA,EACD,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAUL,cAAc,OAAO;AAEjB,UAAI,MAAM,QAAQ,YAAY,MAAM,QAAQ,kBAAkB;AAC1D,eAAOA,iBAAY,aAAC,MAAM,KAAK;AAAA,iBACxB,MAAM,QAAQ,eAAe,MAAM,QAAQ,uBAAuB,MAAM,QAAQ,iBAAiB;AACxG,eAAOC,iBAAS,UAAC,MAAM,KAAK;AAAA,aACzB;AAEH,eAAO,MAAM,SAAS;AAAA,MAC1B;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,mBAAmB,OAAO;AACtB,UAAI,MAAM,QAAQ,aAAa,KAAK,yBAAyB;AAEzD,cAAM,WAAW,KAAK,qBAAqB,KAAK;AAChD,aAAK,0BAA0B,MAAM,OAAO,QAAQ;AAAA,MACxD;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQD,qBAAqB,OAAO;AAExB,UAAI,MAAM,UAAU;AAChB,eAAO,MAAM;AAAA,MACjB;AAEA,aAAO,CAAC;AAAA,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,0BAA0B,SAAS,WAAW,IAAI;AAE9C,WAAK,aAAa,SAAS,QAAQ;AAAA,IACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOD,aAAa,SAAS,WAAW,IAAI;AACjCC,oBAAA,MAAA,MAAA,OAAA,iDAAY,cAAc,SAAS,SAAS,QAAQ;AAGpD,UAAI,SAAS,OAAO,SAAS,KAAK;AAC9B,cAAM,MAAM,WAAW,SAAS,GAAG;AACnC,cAAM,MAAM,WAAW,SAAS,GAAG;AACnCA,0FAAY,YAAY,KAAK,GAAG;AAGhCC,sBAAAA,KAAG,aAAa;AAAA,UACZ,UAAU;AAAA,UACV,WAAW;AAAA,UACX,MAAM,SAAS,gBAAgB;AAAA,UAC/B;AAAA,UACA,OAAO;AAAA,SACV;AAAA,aACE;AACHD,sBAAAA,MAAY,MAAA,OAAA,iDAAA,cAAc;AAC1BA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO;AAAA,UACP,MAAM;AAAA,UACN,UAAU;AAAA,SACb;AAAA,MACL;AAAA,IACJ;AAAA,EACJ;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrMA,GAAG,gBAAgB,SAAS;"}