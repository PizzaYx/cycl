{"version":3,"file":"StatusPicker.js","sources":["components/StatusPicker/StatusPicker.vue","/Users/yx/Documents/Vue3Projects/cycl/components/StatusPicker/StatusPicker.vue?type=component"],"sourcesContent":["<!-- \n  状态选择器组件\n  功能：带选中状态显示的状态选择器\n  使用场景：需要状态筛选的页面\n-->\n<template>\n    <view class=\"status-picker\">\n        <view class=\"filter-item\" @click=\"showStatusPicker\">\n            <text>状态</text>\n            <uni-icons type=\"bottom\" size=\"12\" color=\"#666\"></uni-icons>\n        </view>\n    </view>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\n\n// ==================== Props 定义 ====================\n// 父组件传入的初始值\nconst props = defineProps({\n    // 初始选中的状态值\n    modelValue: {\n        type: [Number, String, null],\n        default: null\n    },\n    // 状态选项配置\n    options: {\n        type: Array,\n        default: () => [\n            { value: 0, text: '待收运' },\n            { value: 1, text: '已完成' },\n            { value: 2, text: '无需收运' }\n        ]\n    }\n})\n\n// ==================== Emits 定义 ====================\n// 向父组件发送的事件\nconst emit = defineEmits([\n    'update:modelValue', // 状态变化时触发，用于 v-model 双向绑定\n    'change'             // 状态变化时触发，传递新的状态值\n])\n\n// ==================== 响应式数据 ====================\n// 内部维护的状态值\nconst selectedStatus = ref(null)\n\n// ==================== 监听器 ====================\n// 监听父组件传入的值变化，同步到内部状态\nwatch(() => props.modelValue, (newValue) => {\n    selectedStatus.value = newValue\n}, { immediate: true })\n\n// 监听内部值变化，通知父组件\nwatch(selectedStatus, (newValue) => {\n    emit('update:modelValue', newValue)\n    emit('change', newValue)\n})\n\n// ==================== 方法定义 ====================\n\n/**\n * 显示状态选择器\n * 使用 uni.showActionSheet 显示状态选项\n */\nconst showStatusPicker = () => {\n    // 创建带选中标记的选项列表\n    const itemList = props.options.map((item) => {\n        const isSelected = selectedStatus.value === item.value\n        return isSelected ? `✓ ${item.text}` : item.text\n    })\n\n    uni.showActionSheet({\n        itemList: itemList,\n        success: (res) => {\n            // 用户选择了某个选项\n            const selectedOption = props.options[res.tapIndex]\n            selectedStatus.value = selectedOption.value\n            console.log('状态选择:', selectedOption.text, selectedOption.value)\n        },\n        fail: (res) => {\n            // 用户点击了取消\n            if (res.errMsg.includes('cancel')) {\n                // 点击取消相当于重置状态\n                selectedStatus.value = null\n                console.log('状态已重置为 null')\n            }\n        }\n    })\n}\n\n// ==================== 暴露给父组件的方法 ====================\n// 父组件可以通过 ref 调用这些方法\ndefineExpose({\n    reset: () => { selectedStatus.value = null },  // 重置方法\n    setValue: (value) => { selectedStatus.value = value }  // 设置值方法\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.status-picker {\n    .filter-item {\n        display: flex;\n        align-items: center;\n        gap: 10rpx; // 文字和箭头紧挨着\n        min-height: 60rpx;\n\n        text {\n            font-size: 28rpx;\n            color: #333;\n        }\n    }\n}\n</style>\n","import Component from '/Users/yx/Documents/Vue3Projects/cycl/components/StatusPicker/StatusPicker.vue'\nwx.createComponent(Component)"],"names":["ref","watch","uni"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,UAAM,QAAQ;AAmBd,UAAM,OAAO;AAOb,UAAM,iBAAiBA,cAAG,IAAC,IAAI;AAI/BC,kBAAK,MAAC,MAAM,MAAM,YAAY,CAAC,aAAa;AACxC,qBAAe,QAAQ;AAAA,IAC3B,GAAG,EAAE,WAAW,MAAM;AAGtBA,kBAAAA,MAAM,gBAAgB,CAAC,aAAa;AAChC,WAAK,qBAAqB,QAAQ;AAClC,WAAK,UAAU,QAAQ;AAAA,IAC3B,CAAC;AAQD,UAAM,mBAAmB,MAAM;AAE3B,YAAM,WAAW,MAAM,QAAQ,IAAI,CAAC,SAAS;AACzC,cAAM,aAAa,eAAe,UAAU,KAAK;AACjD,eAAO,aAAa,KAAK,KAAK,IAAI,KAAK,KAAK;AAAA,MACpD,CAAK;AAEDC,oBAAAA,MAAI,gBAAgB;AAAA,QAChB;AAAA,QACA,SAAS,CAAC,QAAQ;AAEd,gBAAM,iBAAiB,MAAM,QAAQ,IAAI,QAAQ;AACjD,yBAAe,QAAQ,eAAe;AACtCA,8BAAA,MAAA,OAAA,kDAAY,SAAS,eAAe,MAAM,eAAe,KAAK;AAAA,QACjE;AAAA,QACD,MAAM,CAAC,QAAQ;AAEX,cAAI,IAAI,OAAO,SAAS,QAAQ,GAAG;AAE/B,2BAAe,QAAQ;AACvBA,0BAAAA,MAAA,MAAA,OAAA,kDAAY,aAAa;AAAA,UAC5B;AAAA,QACJ;AAAA,MACT,CAAK;AAAA,IACL;AAIA,aAAa;AAAA,MACT,OAAO,MAAM;AAAE,uBAAe,QAAQ;AAAA,MAAM;AAAA;AAAA,MAC5C,UAAU,CAAC,UAAU;AAAE,uBAAe,QAAQ;AAAA,MAAO;AAAA;AAAA,IACzD,CAAC;;;;;;;;;;;;;;AC/FD,GAAG,gBAAgB,SAAS;"}