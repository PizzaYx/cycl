{"version":3,"file":"user.js","sources":["stores/user.js"],"sourcesContent":["// stores/user.js\r\nimport { defineStore } from 'pinia'\r\nimport { apiGetInfo } from '@/api/apis.js'\r\n\r\nexport const useUserStore = defineStore('user', {\r\n    state: () => ({\r\n        userInfo: null,\r\n        isLoggedIn: false,\r\n    }),\r\n\r\n    getters: {\r\n        // 用户昵称\r\n        nickName: (state) => state.userInfo?.nickName || '',\r\n\r\n        // 用户名\r\n        userName: (state) => state.userInfo?.userName || '',\r\n\r\n        // 用户ID\r\n        userId: (state) => state.userInfo?.userId || null,\r\n\r\n        //merchant 商户信息\r\n        merchant: (state) => state.userInfo?.merchant || null,\r\n\r\n        // 头像（使用昵称第一个字）\r\n        userAvatar: (state) => {\r\n            const nickName = state.userInfo?.nickName\r\n            // 如果有昵称，取第一个字；如果没有，显示默认头像文字\r\n            return nickName ? nickName.charAt(0) : '商'\r\n        },\r\n\r\n        // 是否已认证（merchant不为null且status为1表示已认证）\r\n        isVerified: (state) => state.userInfo?.merchant !== null && state.userInfo?.merchant?.status === 1,\r\n\r\n        // 认证状态：0=未审核/待审核，1=认证成功，2=审核不通过\r\n        merchantStatus: (state) => {\r\n            if (!state.userInfo?.merchant) {\r\n                return null // 未提交认证\r\n            }\r\n            return state.userInfo.merchant.status\r\n        },\r\n\r\n        // 认证状态文字\r\n        merchantStatusText: (state) => {\r\n            const status = state.userInfo?.merchant?.status\r\n            switch (status) {\r\n                case 0:\r\n                    return '待审核'\r\n                case 1:\r\n                    return '认证成功'\r\n                case 2:\r\n                    return '审核不通过'\r\n                default:\r\n                    return '未认证'\r\n            }\r\n        },\r\n\r\n        // 用户类型（1=商户，2=收运）\r\n        userType: (state) => state.userInfo?.type || '1',\r\n\r\n        // 用户类型文字\r\n        userTypeText: (state) => {\r\n            const type = state.userInfo?.type\r\n            return type === '1' ? '商户端' : type === '2' ? '收运端' : '未知'\r\n        },\r\n\r\n    },\r\n\r\n    actions: {\r\n        // 设置用户信息（仅存储在内存中）\r\n        setUserInfo(userInfo) {\r\n            this.userInfo = userInfo\r\n            this.isLoggedIn = true\r\n            console.log('完整userInfo对象:', JSON.stringify(userInfo, null, 2))\r\n        },\r\n\r\n        // 从服务器获取用户信息\r\n        async fetchUserInfo() {\r\n            try {\r\n                const res = await apiGetInfo()\r\n                if (res.code === 200) {\r\n                    this.setUserInfo(res.user)\r\n                    console.log('用户信息获取成功:', res.user)\r\n                    return res.user\r\n                } else {\r\n                    console.error('获取用户信息失败:', res.msg)\r\n                    throw new Error(res.msg || '获取用户信息失败')\r\n                }\r\n            } catch (error) {\r\n                console.error('获取用户信息异常:', error)\r\n                throw error\r\n            }\r\n        },\r\n\r\n        // 更新用户信息（仅内存更新）\r\n        updateUserInfo(updates) {\r\n            if (this.userInfo) {\r\n                this.userInfo = { ...this.userInfo, ...updates }\r\n                console.log('用户信息已更新:', this.userInfo)\r\n            }\r\n        },\r\n\r\n        // 检查是否有用户信息，没有则自动获取\r\n        async ensureUserInfo() {\r\n            // 如果已有用户信息，直接返回\r\n            if (this.userInfo) {\r\n                return this.userInfo\r\n            }\r\n\r\n            try {\r\n                // 尝试获取用户信息（request.js会自动处理token验证）\r\n                await this.fetchUserInfo()\r\n                return this.userInfo\r\n            } catch (error) {\r\n                console.error('获取用户信息失败:', error)\r\n                // request.js会自动处理401跳转，这里不需要额外处理\r\n                throw error\r\n            }\r\n        },\r\n\r\n        // 清除用户信息\r\n        clearUserInfo() {\r\n            this.userInfo = null\r\n            this.isLoggedIn = false\r\n            console.log('用户信息已清除')\r\n        },\r\n\r\n        // 退出登录\r\n        logout() {\r\n            // 清除用户信息\r\n            this.clearUserInfo()\r\n\r\n            // 清除token\r\n            uni.removeStorageSync('access_token')\r\n            uni.removeStorageSync('access_expire_time')\r\n            uni.removeStorageSync('refresh_token')\r\n            uni.removeStorageSync('refresh_expire_time')\r\n\r\n            console.log('用户已退出登录')\r\n\r\n            // 跳转到登录页\r\n            uni.redirectTo({\r\n                url: '/pages/index/index'\r\n            })\r\n        }\r\n    }\r\n})\r\n"],"names":["defineStore","uni","apiGetInfo"],"mappings":";;;AAIY,MAAC,eAAeA,cAAW,YAAC,QAAQ;AAAA,EAC5C,OAAO,OAAO;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,EACpB;AAAA,EAEI,SAAS;AAAA;AAAA,IAEL,UAAU,CAAC,UAAK;;AAAK,0BAAM,aAAN,mBAAgB,aAAY;AAAA;AAAA;AAAA,IAGjD,UAAU,CAAC,UAAK;;AAAK,0BAAM,aAAN,mBAAgB,aAAY;AAAA;AAAA;AAAA,IAGjD,QAAQ,CAAC,UAAK;;AAAK,0BAAM,aAAN,mBAAgB,WAAU;AAAA;AAAA;AAAA,IAG7C,UAAU,CAAC,UAAK;;AAAK,0BAAM,aAAN,mBAAgB,aAAY;AAAA;AAAA;AAAA,IAGjD,YAAY,CAAC,UAAU;;AACnB,YAAM,YAAW,WAAM,aAAN,mBAAgB;AAEjC,aAAO,WAAW,SAAS,OAAO,CAAC,IAAI;AAAA,IAC1C;AAAA;AAAA,IAGD,YAAY,CAAC;;AAAU,0BAAM,aAAN,mBAAgB,cAAa,UAAQ,iBAAM,aAAN,mBAAgB,aAAhB,mBAA0B,YAAW;AAAA;AAAA;AAAA,IAGjG,gBAAgB,CAAC,UAAU;;AACvB,UAAI,GAAC,WAAM,aAAN,mBAAgB,WAAU;AAC3B,eAAO;AAAA,MACV;AACD,aAAO,MAAM,SAAS,SAAS;AAAA,IAClC;AAAA;AAAA,IAGD,oBAAoB,CAAC,UAAU;;AAC3B,YAAM,UAAS,iBAAM,aAAN,mBAAgB,aAAhB,mBAA0B;AACzC,cAAQ,QAAM;AAAA,QACV,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX,KAAK;AACD,iBAAO;AAAA,QACX;AACI,iBAAO;AAAA,MACd;AAAA,IACJ;AAAA;AAAA,IAGD,UAAU,CAAC,UAAK;;AAAK,0BAAM,aAAN,mBAAgB,SAAQ;AAAA;AAAA;AAAA,IAG7C,cAAc,CAAC,UAAU;;AACrB,YAAM,QAAO,WAAM,aAAN,mBAAgB;AAC7B,aAAO,SAAS,MAAM,QAAQ,SAAS,MAAM,QAAQ;AAAA,IACxD;AAAA,EAEJ;AAAA,EAED,SAAS;AAAA;AAAA,IAEL,YAAY,UAAU;AAClB,WAAK,WAAW;AAChB,WAAK,aAAa;AAClBC,oBAAAA,MAAA,MAAA,OAAA,wBAAY,iBAAiB,KAAK,UAAU,UAAU,MAAM,CAAC,CAAC;AAAA,IACjE;AAAA;AAAA,IAGD,MAAM,gBAAgB;AAClB,UAAI;AACA,cAAM,MAAM,MAAMC,oBAAY;AAC9B,YAAI,IAAI,SAAS,KAAK;AAClB,eAAK,YAAY,IAAI,IAAI;AACzBD,wBAAY,MAAA,MAAA,OAAA,wBAAA,aAAa,IAAI,IAAI;AACjC,iBAAO,IAAI;AAAA,QAC/B,OAAuB;AACHA,wBAAA,MAAA,MAAA,SAAA,wBAAc,aAAa,IAAI,GAAG;AAClC,gBAAM,IAAI,MAAM,IAAI,OAAO,UAAU;AAAA,QACxC;AAAA,MACJ,SAAQ,OAAO;AACZA,sBAAAA,MAAc,MAAA,SAAA,wBAAA,aAAa,KAAK;AAChC,cAAM;AAAA,MACT;AAAA,IACJ;AAAA;AAAA,IAGD,eAAe,SAAS;AACpB,UAAI,KAAK,UAAU;AACf,aAAK,WAAW,EAAE,GAAG,KAAK,UAAU,GAAG,QAAS;AAChDA,iEAAY,YAAY,KAAK,QAAQ;AAAA,MACxC;AAAA,IACJ;AAAA;AAAA,IAGD,MAAM,iBAAiB;AAEnB,UAAI,KAAK,UAAU;AACf,eAAO,KAAK;AAAA,MACf;AAED,UAAI;AAEA,cAAM,KAAK,cAAe;AAC1B,eAAO,KAAK;AAAA,MACf,SAAQ,OAAO;AACZA,sBAAAA,MAAc,MAAA,SAAA,yBAAA,aAAa,KAAK;AAEhC,cAAM;AAAA,MACT;AAAA,IACJ;AAAA;AAAA,IAGD,gBAAgB;AACZ,WAAK,WAAW;AAChB,WAAK,aAAa;AAClBA,oBAAAA,4CAAY,SAAS;AAAA,IACxB;AAAA;AAAA,IAGD,SAAS;AAEL,WAAK,cAAe;AAGpBA,oBAAG,MAAC,kBAAkB,cAAc;AACpCA,oBAAG,MAAC,kBAAkB,oBAAoB;AAC1CA,oBAAG,MAAC,kBAAkB,eAAe;AACrCA,oBAAG,MAAC,kBAAkB,qBAAqB;AAE3CA,oBAAAA,4CAAY,SAAS;AAGrBA,oBAAAA,MAAI,WAAW;AAAA,QACX,KAAK;AAAA,MACrB,CAAa;AAAA,IACJ;AAAA,EACJ;AACL,CAAC;;"}